//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Net.Security;
using WCF = global::System.ServiceModel;

namespace Glintths.Er.Interop.ServiceContracts
{
	/// <summary>
	/// Service Contract Class - McdtsInteropSc
	/// </summary>
	[WCF::ServiceContract(Namespace = "urn:Glintths.Er.Interop", Name = "McdtsInteropSc", SessionMode = WCF::SessionMode.Allowed, ProtectionLevel = ProtectionLevel.None )]
	public partial interface IMcdtsInteropSc 
	{
		[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Glintths.Er.Interop.McdtsInteropSc.GetWaitingJobs", ProtectionLevel = ProtectionLevel.None)]
		Glintths.Er.Interop.MessageContracts.GetWaitingJobsResponse GetWaitingJobs(Glintths.Er.Interop.MessageContracts.GetWaitingJobsRequest request);

[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Glintths.Er.Interop.McdtsInteropSc.UpdateJobStatus", ProtectionLevel = ProtectionLevel.None)]
		void UpdateJobStatus(Glintths.Er.Interop.MessageContracts.UpdateJobStatusRequest request);

[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Glintths.Er.Interop.McdtsInteropSc.UpdateJobPercentage", ProtectionLevel = ProtectionLevel.None)]
		void UpdateJobPercentage(Glintths.Er.Interop.MessageContracts.UpdateJobPercentageRequest request);

[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Glintths.Er.Interop.McdtsInteropSc.UpdateJobFileStatus", ProtectionLevel = ProtectionLevel.None)]
		void UpdateJobFileStatus(Glintths.Er.Interop.MessageContracts.UpdateJobClientFileRequest request);

[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Glintths.Er.Interop.McdtsInteropSc.JobRegister", ProtectionLevel = ProtectionLevel.None)]
		void JobRegister(Glintths.Er.Interop.MessageContracts.JobRegisterRequest request);

[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Glintths.Er.Interop.McdtsInteropSc.UpdateJobClob", ProtectionLevel = ProtectionLevel.None)]
		void UpdateJobClob(Glintths.Er.Interop.MessageContracts.UpdateJobClobRequest request);

[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Glintths.Er.Interop.McdtsInteropSc.ComputerRegister", ProtectionLevel = ProtectionLevel.None)]
		Glintths.Er.Interop.MessageContracts.ComputerRegisterResponse ComputerRegister(Glintths.Er.Interop.MessageContracts.ComputerRegisterRequest request);

[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Glintths.Er.Interop.McdtsInteropSc.GetAllComputers", ProtectionLevel = ProtectionLevel.None)]
		Glintths.Er.Interop.MessageContracts.GetAllComputersResponse GetAllComputers(Glintths.Er.Interop.MessageContracts.GetAllComputersRequest request);

[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Glintths.Er.Interop.McdtsInteropSc.GetComputerById", ProtectionLevel = ProtectionLevel.None)]
		Glintths.Er.Interop.MessageContracts.GetComputerByIdResponse GetComputerById(Glintths.Er.Interop.MessageContracts.GetComputerByIdRequest request);

[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "GetIdByName", ProtectionLevel = ProtectionLevel.None)]
		Glintths.Er.Interop.MessageContracts.GetIdByNameResponse GetIdByName(Glintths.Er.Interop.MessageContracts.GetIdByNameRequest request);

[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "GetAllContexts", ProtectionLevel = ProtectionLevel.None)]
		Glintths.Er.Interop.MessageContracts.GetAllContextsResponse GetAllContexts(Glintths.Er.Interop.MessageContracts.GetAllContextsRequest request);

[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "GetContextById", ProtectionLevel = ProtectionLevel.None)]
		Glintths.Er.Interop.MessageContracts.GetContextByIdResponse GetContextById(Glintths.Er.Interop.MessageContracts.GetContextByIdRequest request);

[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "ContextRegister", ProtectionLevel = ProtectionLevel.None)]
		Glintths.Er.Interop.MessageContracts.ContestRegisterResponse ContextRegister(Glintths.Er.Interop.MessageContracts.ContextRegisterRequest request);

[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "GetContextByName", ProtectionLevel = ProtectionLevel.None)]
		Glintths.Er.Interop.MessageContracts.GetContextByNameResponse GetContextByName(Glintths.Er.Interop.MessageContracts.GetContextByNameRequest request);

[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "GetJobInfo", ProtectionLevel = ProtectionLevel.None)]
		Glintths.Er.Interop.MessageContracts.GetJobInfoResponse GetJobInfo(Glintths.Er.Interop.MessageContracts.GetJobInfoRequest request);

[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "GetAllStatus", ProtectionLevel = ProtectionLevel.None)]
		Glintths.Er.Interop.MessageContracts.GetAllStatusResponse GetAllStatus(Glintths.Er.Interop.MessageContracts.GetAllStatusRequest request);

[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "UpdateJobErrorLog", ProtectionLevel = ProtectionLevel.None)]
		void UpdateJobErrorLog(Glintths.Er.Interop.MessageContracts.UpdateJobErrorLogRequest request);

	}
}

