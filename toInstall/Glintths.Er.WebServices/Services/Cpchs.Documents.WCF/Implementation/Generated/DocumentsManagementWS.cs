//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using WCF = global::System.ServiceModel;

namespace Cpchs.Documents.WCF.ServiceImplementation
{	
	/// <summary>
	/// Service Class - DocumentsManagementWS
	/// </summary>
	[WCF::ServiceBehavior(Name = "DocumentsManagementWS", 
		Namespace = "urn:Cpchs.Documents", 
		InstanceContextMode = WCF::InstanceContextMode.PerSession, 
		ConcurrencyMode = WCF::ConcurrencyMode.Single )]
	public abstract class DocumentsManagementWSBase : Cpchs.Documents.WCF.ServiceContracts.IDocumentsManagementSC
	{
		#region DocumentsManagementSC Members

		public virtual void RegisterDocumentAccess(Cpchs.Documents.WCF.MessageContracts.RegisterDocumentAccessRequest request)
		{
			
		}

		public virtual Cpchs.Documents.WCF.MessageContracts.GetAllPatientDocumentsResponse GetAllPatientDocuments(Cpchs.Documents.WCF.MessageContracts.GetAllPatientDocumentsRequest request)
		{
			return null;
		}

		public virtual Cpchs.Documents.WCF.MessageContracts.GetDocumentsByExternalIdResponse GetDocumentsByExternalId(Cpchs.Documents.WCF.MessageContracts.GetDocumentsByExternalIdRequest request)
		{
			return null;
		}

		public virtual Cpchs.Documents.WCF.MessageContracts.GetDocumentsByExternalIdV2Response GetDocumentsByExternalIdV2(Cpchs.Documents.WCF.MessageContracts.GetDocumentsByExternalIdV2Request request)
		{
			return null;
		}

		public virtual Cpchs.Documents.WCF.MessageContracts.GetAllPatientDocumentsMultiResponse GetAllPatientDocumentsMulti(Cpchs.Documents.WCF.MessageContracts.GetAllPatientDocumentsMultiRequest request)
		{
			return null;
		}

		public virtual Cpchs.Documents.WCF.MessageContracts.GetDocTypeDescResponse GetDocTypeDesc(Cpchs.Documents.WCF.MessageContracts.GetDocTypeDescRequest request)
		{
			return null;
		}

		public virtual Cpchs.Documents.WCF.MessageContracts.GetDocumentsByMultiCriteriaResponse GetDocumentsByMultiCriteria(Cpchs.Documents.WCF.MessageContracts.GetDocumentsByMultiCriteriaRequest request)
		{
			return null;
		}

		public virtual Cpchs.Documents.WCF.MessageContracts.CancelDocumentResponse CancelDocument(Cpchs.Documents.WCF.MessageContracts.CancelDocumentRequest request)
		{
			return null;
		}

		public virtual Cpchs.Documents.WCF.MessageContracts.CancelElementResponse CancelElement(Cpchs.Documents.WCF.MessageContracts.CancelElementRequest request)
		{
			return null;
		}

		public virtual Cpchs.Documents.WCF.MessageContracts.UpdateElementReportInfoResponse UpdateElementReportInfo(Cpchs.Documents.WCF.MessageContracts.UpdateElementReportInfoRequest request)
		{
			return null;
		}

		public virtual Cpchs.Documents.WCF.MessageContracts.LogDocumentAccessResponse LogDocumentAccess(Cpchs.Documents.WCF.MessageContracts.LogDocumentAccessRequest request)
		{
			return null;
		}

		public virtual Cpchs.Documents.WCF.MessageContracts.GetDocumentVideosResponse GetDocumentVideos(Cpchs.Documents.WCF.MessageContracts.GetDocumentVideosRequest request)
		{
			return null;
		}

		public virtual Cpchs.Documents.WCF.MessageContracts.GetDocumentsByMultiCriteriaV2Response GetDocumentsByMultiCriteriaV2(Cpchs.Documents.WCF.MessageContracts.GetDocumentsByMultiCriteriaV2Request request)
		{
			return null;
		}

        public virtual Cpchs.Documents.WCF.MessageContracts.GetDocumentsByMultiCriteriaV2Response GetDocumentsByMultiCriteriaV3(Cpchs.Documents.WCF.MessageContracts.GetDocumentsByMultiCriteriaV2Request request)
        {
            return null;
        }

        public virtual Cpchs.Documents.WCF.MessageContracts.GetDocumentsByMultiCriteriaV2Response GetDocumentsToCancel(Cpchs.Documents.WCF.MessageContracts.GetDocumentsByMultiCriteriaV2Request request)
        {
            return null;
        }


        public virtual Cpchs.Documents.WCF.MessageContracts.GetGeneralDocumentsResponse GetGeneralDocuments(Cpchs.Documents.WCF.MessageContracts.GetGeneralDocumentsRequest request)
        {
            return null;
        }

        public virtual Cpchs.Documents.WCF.MessageContracts.GetGeneralDocumentsResponse GetCancelledDocuments(Cpchs.Documents.WCF.MessageContracts.GetGeneralDocumentsRequest request)
        {
            return null;
        }

        public virtual Cpchs.Documents.WCF.MessageContracts.GetDocumentsForEPRResponse GetDocumentsForEPR(Cpchs.Documents.WCF.MessageContracts.GetDocumentsForEPRRequest request)
        {
            return null;
        }

        public virtual bool GetDocumentsForEPRv1()
        {
            return false;
        }

		public virtual Cpchs.Documents.WCF.MessageContracts.PromoteDocumentToPublicResponse PromoteDocumentToPublic(Cpchs.Documents.WCF.MessageContracts.PromoteDocumentToPublicRequest request)
		{
			return null;
		}

		public virtual Cpchs.Documents.WCF.MessageContracts.GetPatientDocumentsResponse GetPatientDocuments(Cpchs.Documents.WCF.MessageContracts.GetPatientDocumentsRequest request)
		{
			return null;
		}

		public virtual Cpchs.Documents.WCF.MessageContracts.CancelDocumentPermanentlyResponse CancelDocumentPermanently(Cpchs.Documents.WCF.MessageContracts.CancelDocumentPermanentlyRequest request)
		{
			return null;
		}

		public virtual Cpchs.Documents.WCF.MessageContracts.CancelDocumentLastVersionResponse CancelDocumentLastVersion(Cpchs.Documents.WCF.MessageContracts.CancelDocumentLastVersionRequest request)
		{
			return null;
		}

        public virtual Cpchs.Documents.WCF.MessageContracts.CancelDocumentPermanentlyResponseV2 CancelDocumentPermanentlyV2(Cpchs.Documents.WCF.MessageContracts.CancelDocumentPermanentlyRequestV2 request)
        {
            return null;
        }

        public virtual Cpchs.Documents.WCF.MessageContracts.CancelDocumentLastVersionResponseV2 CancelDocumentLastVersionV2(Cpchs.Documents.WCF.MessageContracts.CancelDocumentLastVersionRequestV2 request)
        {
            return null;
        }

		#endregion		
		
	

        public virtual Cpchs.Documents.WCF.MessageContracts.ConvertPdfToImagesResponse ConvertPdfToImages(Cpchs.Documents.WCF.MessageContracts.ConvertPdfToImagesRequest request)
        {
            return null;
        }

        public virtual Cpchs.Documents.WCF.MessageContracts.OpenDynamicFormResponse OpenDynamicForm(Cpchs.Documents.WCF.MessageContracts.OpenDynamicFormRequest request)
        {
            return null;
        }

        public virtual Cpchs.Documents.WCF.MessageContracts.UpdateElementDescriptionResponse UpdateElementDescription(Cpchs.Documents.WCF.MessageContracts.UpdateElementDescriptionRequest request)
        {
            return null;
        }
    }
	
	public partial class DocumentsManagementWS : DocumentsManagementWSBase
	{
	}
	
}

