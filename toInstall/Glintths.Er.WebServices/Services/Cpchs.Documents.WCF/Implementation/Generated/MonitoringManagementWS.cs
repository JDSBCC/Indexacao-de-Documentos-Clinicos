//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using WCF = global::System.ServiceModel;

namespace Cpchs.Documents.WCF.ServiceImplementation
{	
	/// <summary>
	/// Service Class - MonitoringManagementWS
	/// </summary>
	[WCF::ServiceBehavior(Name = "MonitoringManagementWS", 
		Namespace = "urn:Cpchs.Documents", 
		InstanceContextMode = WCF::InstanceContextMode.PerSession, 
		ConcurrencyMode = WCF::ConcurrencyMode.Single )]
	public abstract class MonitoringManagementWSBase : Cpchs.Documents.WCF.ServiceContracts.IMonitoringManagementSC
	{
		#region MonitoringManagementSC Members

		public virtual Cpchs.Documents.WCF.MessageContracts.GetDocumentLogsByMultiCriteriaResponse GetDocumentLogsByMultiCriteria(Cpchs.Documents.WCF.MessageContracts.GetDocumentLogsByMultiCriteriaRequest request)
		{
			return null;
		}

		public virtual Cpchs.Documents.WCF.MessageContracts.GetAlertsResponse GetAlerts(Cpchs.Documents.WCF.MessageContracts.GetAlertsRequest request)
		{
			return null;
		}

		public virtual Cpchs.Documents.WCF.MessageContracts.UpdateAlertsSubscriptionsResponse UpdateAlertsSubscriptions(Cpchs.Documents.WCF.MessageContracts.UpdateAlertsSubscriptionsRequest request)
		{
			return null;
		}

		public virtual Cpchs.Documents.WCF.MessageContracts.GetAlertsSubscriptionsResponse GetAlertsSubscriptions(Cpchs.Documents.WCF.MessageContracts.GetAlertsSubscriptionsRequest request)
		{
			return null;
		}

		public virtual Cpchs.Documents.WCF.MessageContracts.ProcessIndexDocumentResponse ProcessIndexDocument(Cpchs.Documents.WCF.MessageContracts.ProcessIndexDocumentRequest request)
		{
			return null;
		}

		public virtual Cpchs.Documents.WCF.MessageContracts.IgnoredAlertResponse IgnoredAlert(Cpchs.Documents.WCF.MessageContracts.IgnoredAlertRequest request)
		{
			return null;
		}

		public virtual Cpchs.Documents.WCF.MessageContracts.CorrectedAlertResponse CorrectedAlert(Cpchs.Documents.WCF.MessageContracts.CorrectedAlertRequest request)
		{
			return null;
		}

		#endregion		
		
	}
	
	public partial class MonitoringManagementWS : MonitoringManagementWSBase
	{
	}
	
}

