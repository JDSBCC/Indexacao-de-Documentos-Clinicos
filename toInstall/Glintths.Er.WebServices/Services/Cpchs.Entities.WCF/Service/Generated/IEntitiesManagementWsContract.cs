//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Net.Security;
using WCF = global::System.ServiceModel;

namespace Cpchs.Entities.WCF.ServiceContracts
{
	/// <summary>
	/// Service Contract Class - EntitiesManagementWsContract
	/// </summary>
	[WCF::ServiceContract(Namespace = "urn:Cpchs.Entities", Name = "EntitiesManagementWsContract", SessionMode = WCF::SessionMode.Allowed, ProtectionLevel = ProtectionLevel.None )]
	public partial interface IEntitiesManagementWsContract 
	{
        [WCF::FaultContract(typeof(Cpchs.Entities.WCF.FaultContracts.SearchFiltersDataError))]
        [WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetSearchFiltersData", ReplyAction = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetSearchFiltersData", ProtectionLevel = ProtectionLevel.None)]
        Cpchs.Entities.WCF.MessageContracts.GetSearchFiltersDataResponse GetSearchFiltersData(Cpchs.Entities.WCF.MessageContracts.GetSearchFiltersDataRequest request);

        [WCF::FaultContract(typeof(Cpchs.Entities.WCF.FaultContracts.ServiceEmpty))]
        [WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetServicesForFilters", ReplyAction = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetServicesForFilters", ProtectionLevel = ProtectionLevel.None)]
        Cpchs.Entities.WCF.MessageContracts.GetServicesForFiltersResponse GetServicesForFilters(Cpchs.Entities.WCF.MessageContracts.GetServicesForFiltersRequest request);

//[WCF::FaultContract(typeof(Cpchs.Entities.WCF.FaultContracts.DocTypeTreeError))]
//        [WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetDocTypesForFilters", ReplyAction = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetDocTypesForFilters", ProtectionLevel = ProtectionLevel.None)]
//        Cpchs.Entities.WCF.MessageContracts.GetDocTypesForFiltersResponse GetDocTypesForFilters(Cpchs.Entities.WCF.MessageContracts.GetDocTypesForFiltersRequest request);

        [WCF::FaultContract(typeof(Cpchs.Entities.WCF.FaultContracts.DocTypeTreeError))]
        [WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetDocTypesTreeForFilters", ReplyAction = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetDocTypesTreeForFilters", ProtectionLevel = ProtectionLevel.None)]
        Cpchs.Entities.WCF.MessageContracts.GetDocTypesTreeForFiltersResponse GetDocTypesTreeForFilters(Cpchs.Entities.WCF.MessageContracts.GetDocTypesTreeForFiltersRequest request);

//[WCF::FaultContract(typeof(Cpchs.Entities.WCF.FaultContracts.PatientNotFound))]
//        [WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetPatientByDocument", ReplyAction = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetPatientByDocument", ProtectionLevel = ProtectionLevel.None)]
//        Cpchs.Entities.WCF.MessageContracts.GetPatientByDocumentResponse GetPatientByDocument(Cpchs.Entities.WCF.MessageContracts.GetPatientByDocumentRequest request);

        [WCF::FaultContract(typeof(Cpchs.Entities.WCF.FaultContracts.PatientNotFound))]
        [WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.SimplePatientFind", ReplyAction = "urn:Cpchs.Entities.EntitiesManagementWsContract.SimplePatientFind", ProtectionLevel = ProtectionLevel.None)]
        Cpchs.Entities.WCF.MessageContracts.SimplePatientFindResponse SimplePatientFind(Cpchs.Entities.WCF.MessageContracts.SimplePatientFindRequest request);

        [WCF::FaultContract(typeof(Cpchs.Entities.WCF.FaultContracts.PatientNotFound))]
        [WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.SimplePatientFindV2", ReplyAction = "urn:Cpchs.Entities.EntitiesManagementWsContract.SimplePatientFindV2", ProtectionLevel = ProtectionLevel.None)]
        Cpchs.Entities.WCF.MessageContracts.SimplePatientFindResponse SimplePatientFindV2(Cpchs.Entities.WCF.MessageContracts.SimplePatientFindV2Request request);

//[WCF::FaultContract(typeof(Cpchs.Entities.WCF.FaultContracts.PatientNotFound))]
//        [WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetPatientByDocumentV2", ReplyAction = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetPatientByDocumentV2", ProtectionLevel = ProtectionLevel.None)]
//        Cpchs.Entities.WCF.MessageContracts.GetPatientByDocumentV2Response GetPatientByDocumentV2(Cpchs.Entities.WCF.MessageContracts.GetPatientByDocumentV2Request request);

//[WCF::FaultContract(typeof(Cpchs.Entities.WCF.FaultContracts.ServiceEmpty))]
//        [WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetFavoriteServicesForDoctor", ReplyAction = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetFavoriteServicesForDoctor", ProtectionLevel = ProtectionLevel.None)]
//        Cpchs.Entities.WCF.MessageContracts.GetFavoriteServicesForDoctorResponse GetFavoriteServicesForDoctor(Cpchs.Entities.WCF.MessageContracts.GetFavoriteServicesForDoctorRequest request);

//[WCF::FaultContract(typeof(Cpchs.Entities.WCF.FaultContracts.GroupNotFound))]
//        [WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetGroupsBySpecs", ReplyAction = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetGroupsBySpecs", ProtectionLevel = ProtectionLevel.None)]
//        Cpchs.Entities.WCF.MessageContracts.GetGroupsBySpecsResponse GetGroupsBySpecs(Cpchs.Entities.WCF.MessageContracts.GetGroupsBySpecsRequest request);

//[WCF::FaultContract(typeof(Cpchs.Entities.WCF.FaultContracts.PatientNotFound))]
//        [WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetPatientsBySamples", ReplyAction = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetPatientsBySamples", ProtectionLevel = ProtectionLevel.None)]
//        Cpchs.Entities.WCF.MessageContracts.GetPatientsBySamplesResponse GetPatientsBySamples(Cpchs.Entities.WCF.MessageContracts.GetPatientsBySamplesRequest request);

//[WCF::FaultContract(typeof(Cpchs.Entities.WCF.FaultContracts.PatientNotFound))]
//        [WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.GenericPatientFind", ReplyAction = "urn:Cpchs.Entities.EntitiesManagementWsContract.GenericPatientFind", ProtectionLevel = ProtectionLevel.None)]
//        Cpchs.Entities.WCF.MessageContracts.GenericPatientFindResponse GenericPatientFind(Cpchs.Entities.WCF.MessageContracts.GenericPatientFindRequest request);

//[WCF::FaultContract(typeof(Cpchs.Entities.WCF.FaultContracts.ServiceEmpty))]
//        [WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetServicesForDoctor", ReplyAction = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetServicesForDoctor", ProtectionLevel = ProtectionLevel.None)]
//        Cpchs.Entities.WCF.MessageContracts.GetServicesForDoctorResponse GetServicesForDoctor(Cpchs.Entities.WCF.MessageContracts.GetServicesForDoctorRequest request);

//[WCF::FaultContract(typeof(Cpchs.Entities.WCF.FaultContracts.SearchFiltersDataError))]
//        [WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetSearchFiltersDataV2", ReplyAction = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetSearchFiltersDataV2", ProtectionLevel = ProtectionLevel.None)]
//        Cpchs.Entities.WCF.MessageContracts.GetSearchFiltersDataV2Response GetSearchFiltersDataV2(Cpchs.Entities.WCF.MessageContracts.GetSearchFiltersDataV2Request request);

//[WCF::FaultContract(typeof(Cpchs.Entities.WCF.FaultContracts.SearchFiltersDataError))]
//        [WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetApplicationsForFilters", ReplyAction = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetApplicationsForFilters", ProtectionLevel = ProtectionLevel.None)]
//        Cpchs.Entities.WCF.MessageContracts.GetApplicationsForFiltersResponse GetApplicationsForFilters(Cpchs.Entities.WCF.MessageContracts.GetApplicationsForFiltersRequest request);

//[WCF::FaultContract(typeof(Cpchs.Entities.WCF.FaultContracts.PatientNotFound))]
//        [WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetPatientById", ReplyAction = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetPatientById", ProtectionLevel = ProtectionLevel.None)]
//        Cpchs.Entities.WCF.MessageContracts.GetPatientByIdResponse GetPatientById(Cpchs.Entities.WCF.MessageContracts.GetPatientByIdRequest request);

//[WCF::FaultContract(typeof(Cpchs.Entities.WCF.FaultContracts.EpisodeNotFound))]
//        [WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetPatientEpisodeByIds", ReplyAction = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetPatientEpisodeByIds", ProtectionLevel = ProtectionLevel.None)]
//        Cpchs.Entities.WCF.MessageContracts.GetPatientEpisodeByIdsResponse GetPatientEpisodeByIds(Cpchs.Entities.WCF.MessageContracts.GetPatientEpisodeByIdsRequest request);

//[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetEntityInSession", ReplyAction = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetEntityInSession", ProtectionLevel = ProtectionLevel.None)]
//        Cpchs.Entities.WCF.MessageContracts.GetEntityInSessionResponse GetEntityInSession(Cpchs.Entities.WCF.MessageContracts.GetEntityInSessionRequest request);

//[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetOrInsertPatient", ReplyAction = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetOrInsertPatient", ProtectionLevel = ProtectionLevel.None)]
//        Cpchs.Entities.WCF.MessageContracts.GetOrInsertPatientResponse GetOrInsertPatient(Cpchs.Entities.WCF.MessageContracts.GetOrInsertPatientRequest request);

//[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetOrInsertEntity", ReplyAction = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetOrInsertEntity", ProtectionLevel = ProtectionLevel.None)]
//        Cpchs.Entities.WCF.MessageContracts.GetOrInsertEntityResponse GetOrInsertEntity(Cpchs.Entities.WCF.MessageContracts.GetOrInsertEntityRequest request);

//[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetOrInsertEpisode", ProtectionLevel = ProtectionLevel.None)]
//        Cpchs.Entities.WCF.MessageContracts.GetOrInsertEpisodeResponse GetOrInsertEpisode(Cpchs.Entities.WCF.MessageContracts.GetOrInsertEpisodeRequest request);

//[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetPatientEpisodesByGenericPatient", ReplyAction = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetPatientEpisodesByGenericPatient", ProtectionLevel = ProtectionLevel.None)]
//        Cpchs.Entities.WCF.MessageContracts.GetPatientEpisodesByGenericPatientResponse GetPatientEpisodesByGenericPatient(Cpchs.Entities.WCF.MessageContracts.GetPatientEpisodesByGenericPatientRequest request);

//[WCF::FaultContract(typeof(Cpchs.Entities.WCF.FaultContracts.EpisodeNotFound))]
//        [WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetPatientEpisodesBySearchData", ReplyAction = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetPatientEpisodesBySearchData", ProtectionLevel = ProtectionLevel.None)]
//        Cpchs.Entities.WCF.MessageContracts.GetPatientEpisodesBySearchDataResponse GetPatientEpisodesBySearchData(Cpchs.Entities.WCF.MessageContracts.GetPatientEpisodesBySearchDataRequest request);

//[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetPatientEpisodes", ReplyAction = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetPatientEpisodes", ProtectionLevel = ProtectionLevel.None)]
//        Cpchs.Entities.WCF.MessageContracts.GetPatientEpisodesResponse GetPatientEpisodes(Cpchs.Entities.WCF.MessageContracts.GetPatientEpisodesRequest request);

        [WCF::FaultContract(typeof(Cpchs.Entities.WCF.FaultContracts.SearchFiltersDataError))]
        [WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetSearchFiltersDataV3", ReplyAction = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetSearchFiltersDataV3", ProtectionLevel = ProtectionLevel.None)]
        Cpchs.Entities.WCF.MessageContracts.GetSearchFiltersDataV3Response GetSearchFiltersDataV3(Cpchs.Entities.WCF.MessageContracts.GetSearchFiltersDataV3Request request);

        [WCF::FaultContract(typeof(Cpchs.Entities.WCF.FaultContracts.SearchFiltersDataError))]
        [WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetSearchFiltersDataV4", ReplyAction = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetSearchFiltersDataV4", ProtectionLevel = ProtectionLevel.None)]
        Cpchs.Entities.WCF.MessageContracts.GetSearchFiltersDataV4Response GetSearchFiltersDataV4(Cpchs.Entities.WCF.MessageContracts.GetSearchFiltersDataV4Request request);

//[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetPatientByRequest", ProtectionLevel = ProtectionLevel.None)]
//        Cpchs.Entities.WCF.MessageContracts.GetPatientByRequestResponse GetPatientByRequest(Cpchs.Entities.WCF.MessageContracts.GetPatientByRequestRequest request);

//[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetTerapeutics", ReplyAction = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetTerapeutics", ProtectionLevel = ProtectionLevel.None)]
//        Cpchs.Entities.WCF.MessageContracts.GetTerapeuticsResponse GetTerapeutics(Cpchs.Entities.WCF.MessageContracts.GetTerapeuticsRequest request);

//[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetGroupExamsByGroup", ProtectionLevel = ProtectionLevel.None)]
//        Cpchs.Entities.WCF.MessageContracts.GetGroupExamsByGroupResponse GetGroupExamsByGroup(Cpchs.Entities.WCF.MessageContracts.GetGroupExamsByGroupRequest request);

//[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetExamsBySearchCriteria", ReplyAction = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetExamsBySearchCriteria", ProtectionLevel = ProtectionLevel.None)]
//        Cpchs.Entities.WCF.MessageContracts.GetExamsBySearchCriteriaResponse GetExamsBySearchCriteria(Cpchs.Entities.WCF.MessageContracts.GetExamsBySearchCriteriaRequest request);

//[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetDocumentTypesHierarchy", ReplyAction = "GetDocumentTypesHierarchy", ProtectionLevel = ProtectionLevel.None)]
//        Cpchs.Entities.WCF.MessageContracts.GetDocumentTypesHierarchyResponse GetDocumentTypesHierarchy(Cpchs.Entities.WCF.MessageContracts.GetDocumentTypesHierarchyRequest request);

        [WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetPatientsFromExternalProvider", ProtectionLevel = ProtectionLevel.None)]
        Cpchs.Entities.WCF.MessageContracts.GetPatientsFromExternalProviderResponse GetPatientsFromExternalProvider(Cpchs.Entities.WCF.MessageContracts.GetPatientsFromExternalProviderRequest request);

//[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.ExternalAccessInitialization", ProtectionLevel = ProtectionLevel.None)]
//        Cpchs.Entities.WCF.MessageContracts.ExternalAccessInitializationResponse ExternalAccessInitialization(Cpchs.Entities.WCF.MessageContracts.ExternalAccessInitializationRequest request);

        [WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetPatientEpisodesFromExternalProvider", ProtectionLevel = ProtectionLevel.None)]
        Cpchs.Entities.WCF.MessageContracts.GetPatientEpisodesFromExternalProviderResponse GetPatientEpisodesFromExternalProvider(Cpchs.Entities.WCF.MessageContracts.GetPatientEpisodesFromExternalProviderRequest request);

//[WCF::OperationContract]
//Cpchs.Entities.WCF.DataContracts.EpisodeTypeCollection GetEpisodeTypesFromExternalProvider(string companyDB);

//[WCF::OperationContract]
//Cpchs.Entities.WCF.DataContracts.PatientEpisodeCollection GetEpisodesFromExternalProvider(string companyDB, string tDoente, string doente, string tEpisodio, string episodio);

//[WCF::OperationContract]
//Cpchs.Entities.WCF.DataContracts.PatientEpisode ImportEpisodeToPatient(string companyDB, string tDoente, string doente, string tEpisode, string episode);

//[WCF::OperationContract]
//Cpchs.Entities.WCF.DataContracts.PatientEpisodeCollection SearchEpisode(string companyDB, string tEpisodio, string episodio);

        [WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.CheckUserSettings", ProtectionLevel = ProtectionLevel.None)]
        Cpchs.Entities.WCF.MessageContracts.CheckUserSettingsResponse CheckUserSettings(Cpchs.Entities.WCF.MessageContracts.CheckUserSettingsRequest request);

        [WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetEpisodeTypeByCode", ProtectionLevel = ProtectionLevel.None)]
        Cpchs.Entities.WCF.MessageContracts.GetEpisodeTypeByCodeResponse GetEpisodeTypeByCode(Cpchs.Entities.WCF.MessageContracts.GetEpisodeTypeByCodeRequest req);

        [WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "urn:Cpchs.Entities.EntitiesManagementWsContract.GetPatientsBySpecs", ProtectionLevel = ProtectionLevel.None)]
        Cpchs.Entities.WCF.MessageContracts.GetPatientsBySpecsResponse GetPatientsBySpecs(Cpchs.Entities.WCF.MessageContracts.GetPatientsBySpecsRequest req);

    }
}

