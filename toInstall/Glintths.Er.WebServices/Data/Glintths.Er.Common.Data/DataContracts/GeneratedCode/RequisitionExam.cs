//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using WcfSerialization = global::System.Runtime.Serialization;

namespace Glintths.Er.Common.DataContracts
{
	/// <summary>
	/// Data Contract Class - RequisitionExam
	/// </summary>	
	[WcfSerialization::DataContract(Namespace = "http://Glintths.Er.Services.Model/2010/Glintths", Name = "RequisitionExam")]
	public partial class RequisitionExam 
	{
		private System.Nullable<long> uniqueId;
		private string requisitionUniqueId;
		private Glintths.Er.Common.DataContracts.Rubric rubric;
		private Glintths.Er.Common.DataContracts.Exam exam;
		private long quantity;
		private Glintths.Er.Common.DataContracts.Status status;
		private Glintths.Er.Common.DataContracts.Observations observations;
		private bool isFromMicro;
		private Glintths.Er.Common.DataContracts.ExtractionPlace extractionPlace;
		private bool clinicalInfoIsMandatory;
		private string requester;
		private bool isRemovable;
		private System.Nullable<System.DateTime> assignedDate;
		private string crudCode;
		private bool isCopyEnabled;
		private Glintths.Er.Common.DataContracts.DynamicFormAnswer dynFormAnswer;
		private string workflowId;
		private string workflowInternalId;
		private System.Nullable<bool> hasAuthPermissions;
		private string authPermissions;
		private string authPermissionXml;
		private string authState;
		private bool domicile;
		private Glintths.Er.Common.DataContracts.Product product;
		private Glintths.Er.Common.DataContracts.GenericItem side;
		private Glintths.Er.Common.DataContracts.Priority examPriority;
		private Glintths.Er.Common.DataContracts.Service examExecService;
		private System.DateTime execDate;
		private Glintths.Er.Common.DataContracts.HealthcareUnit healthcareUnit;
		private Glintths.Er.Common.DataContracts.RequisitionType reqExamType;
		private Glintths.Er.Common.DataContracts.ExecutionPlace executionPlace;
		private string arsCode;
		private string areaConv;
		private ServicesObservations servicesObservations;
		private ServicesDynFormAnswer servicesDynFormAnswer;
		private string areaConvDesc;
		private Glintths.Er.Common.DataContracts.RequisitionPlace requisitionPlace;
		private long mcdtId;
		private bool isQuantityEditable;
		private bool isCloneable;
		
		[WcfSerialization::DataMember(Name = "UniqueId", IsRequired = false, Order = 0)]
		public System.Nullable<long> UniqueId
		{
		  get { return uniqueId; }
		  set { uniqueId = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "RequisitionUniqueId", IsRequired = true, Order = 1)]
		public string RequisitionUniqueId
		{
		  get { return requisitionUniqueId; }
		  set { requisitionUniqueId = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "Rubric", IsRequired = false, Order = 2)]
		public Glintths.Er.Common.DataContracts.Rubric Rubric
		{
		  get { return rubric; }
		  set { rubric = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "Exam", IsRequired = false, Order = 3)]
		public Glintths.Er.Common.DataContracts.Exam Exam
		{
		  get { return exam; }
		  set { exam = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "Quantity", IsRequired = true, Order = 4)]
		public long Quantity
		{
		  get { return quantity; }
		  set { quantity = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "Status", IsRequired = true, Order = 5)]
		public Glintths.Er.Common.DataContracts.Status Status
		{
		  get { return status; }
		  set { status = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "Observations", IsRequired = false, Order = 6)]
		public Glintths.Er.Common.DataContracts.Observations Observations
		{
		  get { return observations; }
		  set { observations = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "IsFromMicro", IsRequired = true, Order = 7)]
		public bool IsFromMicro
		{
		  get { return isFromMicro; }
		  set { isFromMicro = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "ExtractionPlace", IsRequired = false, Order = 8)]
		public Glintths.Er.Common.DataContracts.ExtractionPlace ExtractionPlace
		{
		  get { return extractionPlace; }
		  set { extractionPlace = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "ClinicalInfoIsMandatory", IsRequired = true, Order = 9)]
		public bool ClinicalInfoIsMandatory
		{
		  get { return clinicalInfoIsMandatory; }
		  set { clinicalInfoIsMandatory = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "Requester", IsRequired = true, Order = 10)]
		public string Requester
		{
		  get { return requester; }
		  set { requester = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "IsRemovable", IsRequired = false, Order = 11)]
		public bool IsRemovable
		{
		  get { return isRemovable; }
		  set { isRemovable = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "AssignedDate", IsRequired = false, Order = 12)]
		public System.Nullable<System.DateTime> AssignedDate
		{
		  get { return assignedDate; }
		  set { assignedDate = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "CrudCode", IsRequired = false, Order = 13)]
		public string CrudCode
		{
		  get { return crudCode; }
		  set { crudCode = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "IsCopyEnabled", IsRequired = false, Order = 14)]
		public bool IsCopyEnabled
		{
		  get { return isCopyEnabled; }
		  set { isCopyEnabled = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "DynFormAnswer", IsRequired = false, Order = 15)]
		public Glintths.Er.Common.DataContracts.DynamicFormAnswer DynFormAnswer
		{
		  get { return dynFormAnswer; }
		  set { dynFormAnswer = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "WorkflowId", IsRequired = false, Order = 16)]
		public string WorkflowId
		{
		  get { return workflowId; }
		  set { workflowId = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "WorkflowInternalId", IsRequired = false, Order = 17)]
		public string WorkflowInternalId
		{
		  get { return workflowInternalId; }
		  set { workflowInternalId = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "HasAuthPermissions", IsRequired = false, Order = 18)]
		public System.Nullable<bool> HasAuthPermissions
		{
		  get { return hasAuthPermissions; }
		  set { hasAuthPermissions = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "AuthPermissions", IsRequired = false, Order = 19)]
		public string AuthPermissions
		{
		  get { return authPermissions; }
		  set { authPermissions = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "AuthPermissionXml", IsRequired = false, Order = 20)]
		public string AuthPermissionXml
		{
		  get { return authPermissionXml; }
		  set { authPermissionXml = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "AuthState", IsRequired = false, Order = 21)]
		public string AuthState
		{
		  get { return authState; }
		  set { authState = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "Domicile", IsRequired = false, Order = 22)]
		public bool Domicile
		{
		  get { return domicile; }
		  set { domicile = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "Product", IsRequired = false, Order = 23)]
		public Glintths.Er.Common.DataContracts.Product Product
		{
		  get { return product; }
		  set { product = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "Side", IsRequired = false, Order = 24)]
		public Glintths.Er.Common.DataContracts.GenericItem Side
		{
		  get { return side; }
		  set { side = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "ExamPriority", IsRequired = false, Order = 25)]
		public Glintths.Er.Common.DataContracts.Priority ExamPriority
		{
		  get { return examPriority; }
		  set { examPriority = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "ExamExecService", IsRequired = false, Order = 26)]
		public Glintths.Er.Common.DataContracts.Service ExamExecService
		{
		  get { return examExecService; }
		  set { examExecService = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "ExecDate", IsRequired = false, Order = 27)]
		public System.DateTime ExecDate
		{
		  get { return execDate; }
		  set { execDate = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "HealthcareUnit", IsRequired = false, Order = 28)]
		public Glintths.Er.Common.DataContracts.HealthcareUnit HealthcareUnit
		{
		  get { return healthcareUnit; }
		  set { healthcareUnit = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "ReqExamType", IsRequired = false, Order = 29)]
		public Glintths.Er.Common.DataContracts.RequisitionType ReqExamType
		{
		  get { return reqExamType; }
		  set { reqExamType = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "ExecutionPlace", IsRequired = false, Order = 30)]
		public Glintths.Er.Common.DataContracts.ExecutionPlace ExecutionPlace
		{
		  get { return executionPlace; }
		  set { executionPlace = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "ArsCode", IsRequired = false, Order = 31)]
		public string ArsCode
		{
		  get { return arsCode; }
		  set { arsCode = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "AreaConv", IsRequired = false, Order = 32)]
		public string AreaConv
		{
		  get { return areaConv; }
		  set { areaConv = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "ServicesObservations", IsRequired = false, Order = 33)]
		public ServicesObservations ServicesObservations
		{
		  get { return servicesObservations; }
		  set { servicesObservations = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "ServicesDynFormAnswer", IsRequired = false, Order = 34)]
		public ServicesDynFormAnswer ServicesDynFormAnswer
		{
		  get { return servicesDynFormAnswer; }
		  set { servicesDynFormAnswer = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "AreaConvDesc", IsRequired = false, Order = 35)]
		public string AreaConvDesc
		{
		  get { return areaConvDesc; }
		  set { areaConvDesc = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "RequisitionPlace", IsRequired = false, Order = 36)]
		public Glintths.Er.Common.DataContracts.RequisitionPlace RequisitionPlace
		{
		  get { return requisitionPlace; }
		  set { requisitionPlace = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "McdtId", IsRequired = false, Order = 37)]
		public long McdtId
		{
		  get { return mcdtId; }
		  set { mcdtId = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "IsQuantityEditable", IsRequired = false, Order = 40)]
		public bool IsQuantityEditable
		{
		  get { return isQuantityEditable; }
		  set { isQuantityEditable = value; }
		}				
		
		[WcfSerialization::DataMember(Name = "IsCloneable", IsRequired = false, Order = 41)]
		public bool IsCloneable
		{
		  get { return isCloneable; }
		  set { isCloneable = value; }
		}				
	}
}

