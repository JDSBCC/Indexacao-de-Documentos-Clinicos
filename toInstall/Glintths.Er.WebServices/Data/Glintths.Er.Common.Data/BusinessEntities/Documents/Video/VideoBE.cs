using System;
using System.Data;
using System.Text;
using System.Xml;
using System.Xml.Serialization;
using System.IO;
using Microsoft.Practices.EnterpriseLibrary.Logging;
using CPCHS.Common.BusinessEntities;
using Cpchs.Eresults.Common.WCF.BusinessEntities.Generated;
using System.Runtime.Serialization;
	
namespace Cpchs.Eresults.Common.WCF.BusinessEntities
{
    /// <summary>
    /// Date Created: quinta-feira, 7 de Outubro de 2010
    /// Created By: Generated by CodeSmith
	/// Template Created By: CPCHS psilva, 2005
    /// </summary>
    [DataContract]
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly"), System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1705:LongAcronymsShouldBePascalCased"), System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707:IdentifiersShouldNotContainUnderscores"), Serializable]
    public class Video : Video_GEN
	{
        public byte[] Thumb { get; set; }
        /// <summary>
        /// Initialize an new empty Video object.
        /// </summary>
        public Video() : base()
        {
        }
		
		/// <summary>
        /// Initialize an new empty Video object.
        /// </summary>
        public Video(IDataReader reader, string companyDB) : base(reader, companyDB)
        {
            for (int i = 0; i < reader.FieldCount; i++)
            {
                switch (reader.GetName(i).ToUpper(System.Globalization.CultureInfo.CurrentCulture))
                {
 
                    case "ELEMENTTHUMB":
                        if (!reader.IsDBNull(i)) this.Thumb = (byte[])reader.GetValue(i);
                        break;
                }
            }
        }
		
        /// <summary>
        /// Initialize a new  Video object with the given parameters.
        /// </summary>
        public Video(long videoElemId, long videoVersionCode, long videoDuration, string videoDesc, string videoThumbPreviewUri)
            : base(videoElemId, videoVersionCode, videoDuration, videoDesc, videoThumbPreviewUri)
        {
        }
		
        public Video(long videoElemId, long videoVersionCode) : base(videoElemId, videoVersionCode)
        {
			
        }
	}
}


