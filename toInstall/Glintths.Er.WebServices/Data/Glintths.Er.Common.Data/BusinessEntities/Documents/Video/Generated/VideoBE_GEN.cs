using System;
using System.Data;
using System.Xml;
using System.Xml.Serialization;
using System.IO;
using System.Text;
using System.Globalization;
using Microsoft.Practices.EnterpriseLibrary.Logging;
using CPCHS.Common.BusinessEntities;
using System.Runtime.Serialization;
using Cpchs.Eresults.Common.WCF.BusinessEntities;

namespace Cpchs.Eresults.Common.WCF.BusinessEntities.Generated
{
    /// <summary>
    /// Date Created: segunda-feira, 18 de Outubro de 2010
    /// Created By: Generated by CodeSmith
	/// Template Created By: CPCHS psilva, 2005
    /// </summary>
    [DataContract]
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly"), System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1705:LongAcronymsShouldBePascalCased"), System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707:IdentifiersShouldNotContainUnderscores"), Serializable]
    public abstract class Video_GEN : AbstractEntity
    {	
		#region Variables
		
		private long videoElemId = 0; ///
		private long videoVersionCode = 0; ///
		private long videoDuration = 0; ///
		private string videoDesc = string.Empty; ///
		private string videoThumbPreviewUri = string.Empty; ///
		
		private VideoLinkList videoLinks = new VideoLinkList();
	
		#endregion
		
        #region Constructors
		
		/// <summary>
        /// Initialize an new empty Video object.
        /// </summary>
        public Video_GEN() 
			: base(ObjectState.Added, null) 
        {
        }
	
		/// <summary>
        /// Initialize an new empty Video object.
        /// </summary>
        public Video_GEN(long videoElemId, long videoVersionCode) 
			: base(ObjectState.Added , null) 
        {
			this.videoElemId = videoElemId;
			this.videoVersionCode = videoVersionCode;
        }
		/// <summary>
        /// Initialize an new empty Video object.
        /// </summary>
        public Video_GEN(IDataReader reader, string companyDB) 
			: base(ObjectState.Unchanged, null, companyDB) 
        {
			LoadFromReader(reader);
        }
		
        /// <summary>
        /// Initialize a new  Video object with the given parameters.
        /// </summary>
        public  Video_GEN(long videoElemId, long videoVersionCode, long videoDuration, string videoDesc, string videoThumbPreviewUri) 
			: base(ObjectState.Added, null) 
        {	 
			this.videoElemId = videoElemId;
			this.videoVersionCode = videoVersionCode;
			this.videoDuration = videoDuration;
			this.videoDesc = videoDesc;
			this.videoThumbPreviewUri = videoThumbPreviewUri;
        }
		#endregion
		
		#region Properties
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public long VideoElemId
        {
            get { return this.videoElemId; }
            set { 
				if(this.videoElemId != value) {
					this.videoElemId = value;
					DataStateChanged(ObjectState.Modified, "VideoElemId");
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public long VideoVersionCode
        {
            get { return this.videoVersionCode; }
            set { 
				if(this.videoVersionCode != value) {
					this.videoVersionCode = value;
					DataStateChanged(ObjectState.Modified, "VideoVersionCode");
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public long VideoDuration
        {
            get { return this.videoDuration; }
            set { 
				if(this.videoDuration != value) {
					this.videoDuration = value;
					DataStateChanged(ObjectState.Modified, "VideoDuration");
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string VideoDesc
        {
            get { return this.videoDesc; }
            set { 
				if(this.videoDesc != value) {
					this.videoDesc = value;
					DataStateChanged(ObjectState.Modified, "VideoDesc");
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string VideoThumbPreviewUri
        {
            get { return this.videoThumbPreviewUri; }
            set { 
				if(this.videoThumbPreviewUri != value) {
					this.videoThumbPreviewUri = value;
					DataStateChanged(ObjectState.Modified, "VideoThumbPreviewUri");
				}
			}
		}
		
		
		
		[DataMember]
		public VideoLinkList VideoLinks
		{
			get { return this.videoLinks; }
			set { 
				if(this.videoLinks != value) {
					DataStateChanged(ObjectState.Modified, "VideoLinks");
            				this.videoLinks = value;
				}
			}
		}
		
		
		#endregion
	
		#region Methods
	
		private void LoadFromReader(IDataReader reader)
		{
			if (reader != null && !reader.IsClosed)
            {	
				for(int i=0; i<reader.FieldCount; i++) {
					switch(reader.GetName(i).ToUpper(System.Globalization.CultureInfo.CurrentCulture)) {
						case "VIDEOELEMID":
							if (!reader.IsDBNull(i)) this.videoElemId = reader.GetInt64(i);
							break;
						case "VIDEOVERSIONCODE":
							if (!reader.IsDBNull(i)) this.videoVersionCode = reader.GetInt64(i);
							break;
						case "VIDEODURATION":
							if (!reader.IsDBNull(i)) this.videoDuration = reader.GetInt64(i);
							break;
						case "VIDEODESC":
							if (!reader.IsDBNull(i)) this.videoDesc = Convert.ToString(reader.GetValue(i));
							break;
						case "VIDEOTHUMBPREVIEWURI":
							if (!reader.IsDBNull(i)) this.videoThumbPreviewUri = Convert.ToString(reader.GetValue(i));
							break;
					}
				}
            }
		}
		
		public override bool Equals(object obj)
		{
			Video video = obj as Video;
			if (video == null)
				return false;
			return video.VideoVersionCode == VideoVersionCode;; 
		}
		
		public override int GetHashCode()
		{
			return base.GetHashCode ();
		}
		
		#endregion
    }
}


