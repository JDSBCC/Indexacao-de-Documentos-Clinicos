using System;
using System.Data;
using System.Xml;
using System.Xml.Serialization;
using System.IO;
using System.Text;
using System.Globalization;
using Microsoft.Practices.EnterpriseLibrary.Logging;
using CPCHS.Common.BusinessEntities;
using System.Runtime.Serialization;
using Cpchs.Eresults.Common.WCF;

namespace Cpchs.Eresults.Common.WCF.BusinessEntities.Generated
{
    /// <summary>
    /// Date Created: segunda-feira, 21 de Dezembro de 2009
    /// Created By: Generated by CodeSmith
	/// Template Created By: CPCHS psilva, 2005
    /// </summary>
    [DataContract]
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly"), System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1705:LongAcronymsShouldBePascalCased"), System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707:IdentifiersShouldNotContainUnderscores"), Serializable]
    public abstract class DocumentLog_GEN : AbstractEntity
    {	
		#region Variables
		
		private long docLogId; ///
		private Nullable<long> docLogPatTypeId; ///
		private string docLogPatId = string.Empty; ///
		private Nullable<long> docLogInstId; ///
		private Nullable<long> docLogPlaceId; ///
		private Nullable<long> docLogAppId; ///
		private Nullable<long> docLogDocTypeId; ///
		private string docLogDoc = string.Empty; ///
		private Nullable<DateTime> docLogDataDoc = new Nullable<DateTime>(); ///
		private Nullable<DateTime> docLogArrivDate = new Nullable<DateTime>(); ///
		private Nullable<DateTime> docLogProcDate = new Nullable<DateTime>(); ///
		private long docLogStatusId; ///
		private Nullable<long> docLogDocId; ///
		private long docLogXmlId; ///
		
		private DocumentEpisodeLogList docLogEpisodeLog = new DocumentEpisodeLogList();
		private DocumentIndexLogList docLogIndexLog = new DocumentIndexLogList();
	
		#endregion
		
        #region Constructors
		
		/// <summary>
        /// Initialize an new empty DocumentLog object.
        /// </summary>
        public DocumentLog_GEN() 
			: base(ObjectState.Added, null) 
        {
        }
	
		/// <summary>
        /// Initialize an new empty DocumentLog object.
        /// </summary>
        public DocumentLog_GEN(long docLogId) 
			: base(ObjectState.Added, null) 
        {
			this.docLogId = docLogId;
        }
		/// <summary>
        /// Initialize an new empty DocumentLog object.
        /// </summary>
        public DocumentLog_GEN(IDataReader reader, string companyDB) 
			: base(ObjectState.Unchanged, null, companyDB) 
        {
			LoadFromReader(reader);
        }
		
        /// <summary>
        /// Initialize a new  DocumentLog object with the given parameters.
        /// </summary>
        public  DocumentLog_GEN(long docLogPatTypeId, string docLogPatId, long docLogInstId, long docLogPlaceId, long docLogAppId, long docLogDocTypeId, string docLogDoc, Nullable<DateTime> docLogDataDoc, Nullable<DateTime> docLogArrivDate, Nullable<DateTime> docLogProcDate, long docLogStatusId, long docLogDocId, long docLogXmlId) 
			: base(ObjectState.Added, null) 
        {	 
			this.docLogPatTypeId = docLogPatTypeId;
			this.docLogPatId = docLogPatId;
			this.docLogInstId = docLogInstId;
			this.docLogPlaceId = docLogPlaceId;
			this.docLogAppId = docLogAppId;
			this.docLogDocTypeId = docLogDocTypeId;
			this.docLogDoc = docLogDoc;
			this.docLogDataDoc = docLogDataDoc;
			this.docLogArrivDate = docLogArrivDate;
			this.docLogProcDate = docLogProcDate;
			this.docLogStatusId = docLogStatusId;
			this.docLogDocId = docLogDocId;
			this.docLogXmlId = docLogXmlId;
        }
		#endregion
		
		#region Properties
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public long DocLogId
        {
            get { return this.docLogId; }
            set { 
				if(this.docLogId != value) {
					DataStateChanged(ObjectState.Modified, "DocLogId");
            		this.docLogId = value;
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public Nullable<long> DocLogPatTypeId
        {
            get { return this.docLogPatTypeId; }
            set { 
				if(this.docLogPatTypeId != value) {
					DataStateChanged(ObjectState.Modified, "DocLogPatTypeId");
            		this.docLogPatTypeId = value;
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string DocLogPatId
        {
            get { return this.docLogPatId; }
            set { 
				if(this.docLogPatId != value) {
					DataStateChanged(ObjectState.Modified, "DocLogPatId");
            		this.docLogPatId = value;
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public Nullable<long> DocLogInstId
        {
            get { return this.docLogInstId; }
            set { 
				if(this.docLogInstId != value) {
					DataStateChanged(ObjectState.Modified, "DocLogInstId");
            		this.docLogInstId = value;
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public Nullable<long> DocLogPlaceId
        {
            get { return this.docLogPlaceId; }
            set { 
				if(this.docLogPlaceId != value) {
					DataStateChanged(ObjectState.Modified, "DocLogPlaceId");
            		this.docLogPlaceId = value;
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public Nullable<long> DocLogAppId
        {
            get { return this.docLogAppId; }
            set { 
				if(this.docLogAppId != value) {
					DataStateChanged(ObjectState.Modified, "DocLogAppId");
            		this.docLogAppId = value;
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public Nullable<long> DocLogDocTypeId
        {
            get { return this.docLogDocTypeId; }
            set { 
				if(this.docLogDocTypeId != value) {
					DataStateChanged(ObjectState.Modified, "DocLogDocTypeId");
            		this.docLogDocTypeId = value;
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string DocLogDoc
        {
            get { return this.docLogDoc; }
            set { 
				if(this.docLogDoc != value) {
					DataStateChanged(ObjectState.Modified, "DocLogDoc");
            		this.docLogDoc = value;
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public Nullable<DateTime> DocLogDataDoc
        {
            get { return this.docLogDataDoc; }
            set { 
				if(!this.docLogDataDoc.Equals(value)) {
					DataStateChanged(ObjectState.Modified, "DocLogDataDoc");
					this.docLogDataDoc = value;
				}
		}

		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public Nullable<DateTime> DocLogArrivDate
        {
            get { return this.docLogArrivDate; }
            set { 
				if(!this.docLogArrivDate.Equals(value)) {
					DataStateChanged(ObjectState.Modified, "DocLogArrivDate");
					this.docLogArrivDate = value;
				}
		}

		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public Nullable<DateTime> DocLogProcDate
        {
            get { return this.docLogProcDate; }
            set { 
				if(!this.docLogProcDate.Equals(value)) {
					DataStateChanged(ObjectState.Modified, "DocLogProcDate");
					this.docLogProcDate = value;
				}
		}

		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public long DocLogStatusId
        {
            get { return this.docLogStatusId; }
            set { 
				if(this.docLogStatusId != value) {
					DataStateChanged(ObjectState.Modified, "DocLogStatusId");
            		this.docLogStatusId = value;
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public Nullable<long> DocLogDocId
        {
            get { return this.docLogDocId; }
            set { 
				if(this.docLogDocId != value) {
					DataStateChanged(ObjectState.Modified, "DocLogDocId");
            		this.docLogDocId = value;
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public long DocLogXmlId
        {
            get { return this.docLogXmlId; }
            set { 
				if(this.docLogXmlId != value) {
					DataStateChanged(ObjectState.Modified, "DocLogXmlId");
            		this.docLogXmlId = value;
				}
			}
		}
		
		
		
		[DataMember]
		public DocumentEpisodeLogList DocLogEpisodeLog
		{
			get { return this.docLogEpisodeLog; }
			set { 
				if(this.docLogEpisodeLog != value) {
					DataStateChanged(ObjectState.Modified, "DocLogEpisodeLog");
            				this.docLogEpisodeLog = value;
				}
			}
		}
		
		
		[DataMember]
		public DocumentIndexLogList DocLogIndexLog
		{
			get { return this.docLogIndexLog; }
			set { 
				if(this.docLogIndexLog != value) {
					DataStateChanged(ObjectState.Modified, "DocLogIndexLog");
            				this.docLogIndexLog = value;
				}
			}
		}
		
		
		#endregion
	
		#region Methods
	
		private void LoadFromReader(IDataReader reader)
		{
			if (reader != null && !reader.IsClosed)
            {	
				for(int i=0; i<reader.FieldCount; i++) {
					switch(reader.GetName(i).ToUpper(System.Globalization.CultureInfo.CurrentCulture)) {
						case "DOCLOGID":
							if (!reader.IsDBNull(i)) this.docLogId = reader.GetInt64(i);
							break;
						case "DOCLOGPATTYPEID":
							if (!reader.IsDBNull(i)) this.docLogPatTypeId = reader.GetInt64(i);
							break;
						case "DOCLOGPATID":
							if (!reader.IsDBNull(i)) this.docLogPatId = Convert.ToString(reader.GetValue(i));
							break;
						case "DOCLOGINSTID":
							if (!reader.IsDBNull(i)) this.docLogInstId = reader.GetInt64(i);
							break;
						case "DOCLOGPLACEID":
							if (!reader.IsDBNull(i)) this.docLogPlaceId = reader.GetInt64(i);
							break;
						case "DOCLOGAPPID":
							if (!reader.IsDBNull(i)) this.docLogAppId = reader.GetInt64(i);
							break;
						case "DOCLOGDOCTYPEID":
							if (!reader.IsDBNull(i)) this.docLogDocTypeId = reader.GetInt64(i);
							break;
						case "DOCLOGDOC":
							if (!reader.IsDBNull(i)) this.docLogDoc = Convert.ToString(reader.GetValue(i));
							break;
						case "DOCLOGDATADOC":
							if (!reader.IsDBNull(i)) this.docLogDataDoc = reader.GetDateTime(i);
							break;
						case "DOCLOGARRIVDATE":
							if (!reader.IsDBNull(i)) this.docLogArrivDate = reader.GetDateTime(i);
							break;
						case "DOCLOGPROCDATE":
							if (!reader.IsDBNull(i)) this.docLogProcDate = reader.GetDateTime(i);
							break;
						case "DOCLOGSTATUSID":
							if (!reader.IsDBNull(i)) this.docLogStatusId = reader.GetInt64(i);
							break;
						case "DOCLOGDOCID":
							if (!reader.IsDBNull(i)) this.docLogDocId = reader.GetInt64(i);
							break;
						case "DOCLOGXMLID":
							if (!reader.IsDBNull(i)) this.docLogXmlId = reader.GetInt64(i);
							break;
					}
				}
            }
		}
		
		public override bool Equals(object obj)
		{
			DocumentLog documentlog = obj as DocumentLog;
			if (documentlog == null)
				return false;
			return documentlog.DocLogId == DocLogId;; 
		}
		
		public override int GetHashCode()
		{
			return base.GetHashCode ();
		}
		
		#endregion
    }
}


