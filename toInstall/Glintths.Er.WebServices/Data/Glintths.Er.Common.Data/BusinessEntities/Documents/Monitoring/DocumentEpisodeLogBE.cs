using System;
using System.Data;
using System.Text;
using System.Xml;
using System.Xml.Serialization;
using System.IO;

using Microsoft.Practices.EnterpriseLibrary.Logging;

using CPCHS.Common.BusinessEntities;
using Cpchs.Eresults.Common.WCF.BusinessEntities.Generated;
	
namespace Cpchs.Eresults.Common.WCF.BusinessEntities
{
    /// <summary>
    /// Date Created: ter?a-feira, 20 de Outubro de 2009
    /// Created By: Generated by CodeSmith
	/// Template Created By: CPCHS psilva, 2005
    /// </summary>
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly"), System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1705:LongAcronymsShouldBePascalCased"), System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707:IdentifiersShouldNotContainUnderscores"), Serializable]
    public class DocumentEpisodeLog : DocumentEpisodeLog_GEN
	{
        public string docEpiLogEpiTypeDesc;
        public string docEpiLogInstDesc;
        public string docEpiLogPlaceDesc;
		
        /// <summary>
        /// Initialize an new empty DocumentEpisodeLog object.
        /// </summary>
        public DocumentEpisodeLog() : base()
        {
        }
		
		/// <summary>
        /// Initialize an new empty DocumentEpisodeLog object.
        /// </summary>
        public DocumentEpisodeLog(IDataReader reader, string companyDB) : base(reader, companyDB)
        {
            if (reader != null && !reader.IsClosed)
            {
                for (int i = 0; i < reader.FieldCount; i++)
                {
                    switch (reader.GetName(i).ToUpper(System.Globalization.CultureInfo.CurrentCulture))
                    {
                        case "DOCEPILOGEPITYPEDESC":
                            if (!reader.IsDBNull(i)) this.docEpiLogEpiTypeDesc = Convert.ToString(reader.GetValue(i));
                            break;
                        case "DOCEPILOGINSTESC":
                            if (!reader.IsDBNull(i)) this.docEpiLogEpiTypeDesc = Convert.ToString(reader.GetValue(i));
                            break;
                        case "DOCEPILOGPLACEDESC":
                            if (!reader.IsDBNull(i)) this.docEpiLogEpiTypeDesc = Convert.ToString(reader.GetValue(i));
                            break;
                    }
                }
            }
        }
		
        /// <summary>
        /// Initialize a new  DocumentEpisodeLog object with the given parameters.
        /// </summary>
        public  DocumentEpisodeLog(long docEpiLogDocLogId, long docEpiLogEpiTypeId, string docEpiLogEpiId, long docEpiLogInstId, long docEpiLogPlaceId) : base(docEpiLogDocLogId, docEpiLogEpiTypeId, docEpiLogEpiId, docEpiLogInstId, docEpiLogPlaceId)
        {
        }
		
        public DocumentEpisodeLog(long docEpiLogId) : base(docEpiLogId)
        {
			
        }
	}
}


