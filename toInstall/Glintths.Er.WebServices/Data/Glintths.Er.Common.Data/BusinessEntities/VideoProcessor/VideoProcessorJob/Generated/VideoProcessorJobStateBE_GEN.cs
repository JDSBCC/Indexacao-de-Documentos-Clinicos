using System;
using System.Data;
using System.Xml;
using System.Xml.Serialization;
using System.IO;
using System.Text;
using System.Globalization;
using Microsoft.Practices.EnterpriseLibrary.Logging;
using CPCHS.Common.BusinessEntities;
using System.Runtime.Serialization;

namespace Cpchs.Eresults.Common.WCF.BusinessEntities.Generated
{
    /// <summary>
    /// Date Created: quarta-feira, 27 de Outubro de 2010
    /// Created By: Generated by CodeSmith
	/// Template Created By: CPCHS psilva, 2005
    /// </summary>
    [DataContract]
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly"), System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1705:LongAcronymsShouldBePascalCased"), System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707:IdentifiersShouldNotContainUnderscores"), Serializable]
    public abstract class VideoProcessorJobState_GEN : AbstractEntity
    {	
		#region Variables
		
		private long jobId = 0; ///
		private long jobClient = 0; ///
		private long jobStatus = 0; ///
		private DateTime? jobRegisterTimestamp = null; ///
		private DateTime? jobCompletedTimestamp = null; ///
		private long jobCompletedPercentage = 0; ///
		private long jobContext = 0; ///
		private string jobClientFileDeleted = string.Empty; ///
		private string jobURL = string.Empty; ///
		private object jobXMLData = null; ///
		private object jobErrorLog = null; ///
		private string jobData = string.Empty; ///
		
	
		#endregion
		
        #region Constructors
		
		/// <summary>
        /// Initialize an new empty VideoProcessorJobState object.
        /// </summary>
        public VideoProcessorJobState_GEN() 
			: base(ObjectState.Added, null) 
        {
        }
	
		/// <summary>
        /// Initialize an new empty VideoProcessorJobState object.
        /// </summary>
        public VideoProcessorJobState_GEN(long jobId) 
			: base(ObjectState.Added , null) 
        {
			this.jobId = jobId;
        }
		/// <summary>
        /// Initialize an new empty VideoProcessorJobState object.
        /// </summary>
        public VideoProcessorJobState_GEN(IDataReader reader, string companyDB) 
			: base(ObjectState.Unchanged, null, companyDB) 
        {
			LoadFromReader(reader);
        }
		
        /// <summary>
        /// Initialize a new  VideoProcessorJobState object with the given parameters.
        /// </summary>
        public  VideoProcessorJobState_GEN(long jobClient, long jobStatus, DateTime? jobRegisterTimestamp, DateTime? jobCompletedTimestamp, long jobCompletedPercentage, long jobContext, string jobClientFileDeleted, string jobURL, object jobXMLData, object jobErrorLog, string jobData) 
			: base(ObjectState.Added, null) 
        {	 
			this.jobClient = jobClient;
			this.jobStatus = jobStatus;
			this.jobRegisterTimestamp = jobRegisterTimestamp;
			this.jobCompletedTimestamp = jobCompletedTimestamp;
			this.jobCompletedPercentage = jobCompletedPercentage;
			this.jobContext = jobContext;
			this.jobClientFileDeleted = jobClientFileDeleted;
			this.jobURL = jobURL;
			this.jobXMLData = jobXMLData;
			this.jobErrorLog = jobErrorLog;
			this.jobData = jobData;
        }
		#endregion
		
		#region Properties
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public long JobId
        {
            get { return this.jobId; }
            set { 
				if(this.jobId != value) {
					this.jobId = value;
					DataStateChanged(ObjectState.Modified, "JobId");
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public long JobClient
        {
            get { return this.jobClient; }
            set { 
				if(this.jobClient != value) {
					this.jobClient = value;
					DataStateChanged(ObjectState.Modified, "JobClient");
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public long JobStatus
        {
            get { return this.jobStatus; }
            set { 
				if(this.jobStatus != value) {
					this.jobStatus = value;
					DataStateChanged(ObjectState.Modified, "JobStatus");
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public DateTime? JobRegisterTimestamp
        {
            get { return this.jobRegisterTimestamp; }
            set { 
				if(!this.jobRegisterTimestamp.Equals(value)) {
					this.jobRegisterTimestamp = value;
					DataStateChanged(ObjectState.Modified, "JobRegisterTimestamp");
				}
		}

		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public DateTime? JobCompletedTimestamp
        {
            get { return this.jobCompletedTimestamp; }
            set { 
				if(!this.jobCompletedTimestamp.Equals(value)) {
					this.jobCompletedTimestamp = value;
					DataStateChanged(ObjectState.Modified, "JobCompletedTimestamp");
				}
		}

		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public long JobCompletedPercentage
        {
            get { return this.jobCompletedPercentage; }
            set { 
				if(this.jobCompletedPercentage != value) {
					this.jobCompletedPercentage = value;
					DataStateChanged(ObjectState.Modified, "JobCompletedPercentage");
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public long JobContext
        {
            get { return this.jobContext; }
            set { 
				if(this.jobContext != value) {
					this.jobContext = value;
					DataStateChanged(ObjectState.Modified, "JobContext");
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string JobClientFileDeleted
        {
            get { return this.jobClientFileDeleted; }
            set { 
				if(this.jobClientFileDeleted != value) {
					this.jobClientFileDeleted = value;
					DataStateChanged(ObjectState.Modified, "JobClientFileDeleted");
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string JobURL
        {
            get { return this.jobURL; }
            set { 
				if(this.jobURL != value) {
					this.jobURL = value;
					DataStateChanged(ObjectState.Modified, "JobURL");
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public object JobXMLData
        {
            get { return this.jobXMLData; }
            set { 
				if(this.jobXMLData != value) {
					this.jobXMLData = value;
					DataStateChanged(ObjectState.Modified, "JobXMLData");
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public object JobErrorLog
        {
            get { return this.jobErrorLog; }
            set { 
				if(this.jobErrorLog != value) {
					this.jobErrorLog = value;
					DataStateChanged(ObjectState.Modified, "JobErrorLog");
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string JobData
        {
            get { return this.jobData; }
            set { 
				if(this.jobData != value) {
					this.jobData = value;
					DataStateChanged(ObjectState.Modified, "JobData");
				}
			}
		}
		
		
		
		#endregion
	
		#region Methods
		
		protected void LoadVideoProcessorJobState_GEN(IDataReader reader, string companyDb)
        {
			base.CompanyDB = companyDb;
            base.ObjectState = CPCHS.Common.BusinessEntities.ObjectState.Unchanged;

			LoadFromReader(reader);
        }
	
		private void LoadFromReader(IDataReader reader)
		{
			if (reader != null && !reader.IsClosed)
            {	
				for(int i=0; i<reader.FieldCount; i++) {
					switch(reader.GetName(i).ToUpper(System.Globalization.CultureInfo.CurrentCulture)) {
						case "JOBID":
							if (!reader.IsDBNull(i)) this.jobId = reader.GetInt64(i);
							break;
						case "JOBCLIENT":
							if (!reader.IsDBNull(i)) this.jobClient = reader.GetInt64(i);
							break;
						case "JOBSTATUS":
							if (!reader.IsDBNull(i)) this.jobStatus = reader.GetInt64(i);
							break;
						case "JOBREGISTERTIMESTAMP":
							if (!reader.IsDBNull(i)) this.jobRegisterTimestamp = reader.GetDateTime(i);
							break;
						case "JOBCOMPLETEDTIMESTAMP":
							if (!reader.IsDBNull(i)) this.jobCompletedTimestamp = reader.GetDateTime(i);
							break;
						case "JOBCOMPLETEDPERCENTAGE":
							if (!reader.IsDBNull(i)) this.jobCompletedPercentage = reader.GetInt64(i);
							break;
						case "JOBCONTEXT":
							if (!reader.IsDBNull(i)) this.jobContext = reader.GetInt64(i);
							break;
						case "JOBCLIENTFILEDELETED":
							if (!reader.IsDBNull(i)) this.jobClientFileDeleted = Convert.ToString(reader.GetValue(i));
							break;
						case "JOBURL":
							if (!reader.IsDBNull(i)) this.jobURL = Convert.ToString(reader.GetValue(i));
							break;
						case "JOBXMLDATA":
							if (!reader.IsDBNull(i)) this.jobXMLData = reader.GetValue(i);
							break;
						case "JOBERRORLOG":
							if (!reader.IsDBNull(i)) this.jobErrorLog = reader.GetValue(i);
							break;
						case "JOBDATA":
							if (!reader.IsDBNull(i)) this.jobData = Convert.ToString(reader.GetValue(i));
							break;
					}
				}
            }
		}
		
		public override bool Equals(object obj)
		{
			VideoProcessorJobState videoprocessorjobstate = obj as VideoProcessorJobState;
			if (videoprocessorjobstate == null)
				return false;
			return videoprocessorjobstate.JobId == JobId;; 
		}
		
		public override int GetHashCode()
		{
			return base.GetHashCode ();
		}
		
		#endregion
    }
}


