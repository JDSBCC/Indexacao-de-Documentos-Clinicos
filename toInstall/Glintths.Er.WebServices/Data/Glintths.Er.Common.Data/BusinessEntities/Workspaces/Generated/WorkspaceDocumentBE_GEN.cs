using System;
using System.Data;
using System.Xml;
using System.Xml.Serialization;
using System.IO;
using System.Text;
using System.Globalization;
using Microsoft.Practices.EnterpriseLibrary.Logging;
using CPCHS.Common.BusinessEntities;
using System.Runtime.Serialization;

namespace Glintths.Er.Common.BusinessEntities.Generated
{
    /// <summary>
    /// Date Created: sexta-feira, 11 de Mar?o de 2011
    /// Created By: Generated by CodeSmith
	/// Template Created By: CPCHS psilva, 2005
    /// </summary>
    [DataContract(Name = "WorkspaceDocument_GEN", Namespace = "http://glintt.com/types")]
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly"), System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1705:LongAcronymsShouldBePascalCased"), System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707:IdentifiersShouldNotContainUnderscores"), Serializable]
    public abstract class WorkspaceDocument_GEN : AbstractEntity
    {	
		#region Variables
		
		private long workspaceId = 0; ///
		private long documentId = 0; ///
		
	
		#endregion
		
        #region Constructors
		
		/// <summary>
        /// Initialize an new empty WorkspaceDocument object.
        /// </summary>
        public WorkspaceDocument_GEN() 
			: base(ObjectState.Added, null) 
        {
        }
	
		/// <summary>
        /// Initialize an new empty WorkspaceDocument object.
        /// </summary>
        public WorkspaceDocument_GEN(long workspaceId, long documentId) 
			: base(ObjectState.Added , null) 
        {
			this.workspaceId = workspaceId;
			this.documentId = documentId;
        }
		/// <summary>
        /// Initialize an new empty WorkspaceDocument object.
        /// </summary>
        public WorkspaceDocument_GEN(IDataReader reader, string companyDB) 
			: base(ObjectState.Unchanged, reader, companyDB) 
        {
			LoadFromReader(reader);
        }
		
		#endregion
		
		#region Properties
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public long WorkspaceId
        {
            get { return this.workspaceId; }
            set { 
				if(this.workspaceId != value) {
					this.workspaceId = value;
					DataStateChanged(ObjectState.Modified, "WorkspaceId");
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public long DocumentId
        {
            get { return this.documentId; }
            set { 
				if(this.documentId != value) {
					this.documentId = value;
					DataStateChanged(ObjectState.Modified, "DocumentId");
				}
			}
		}
		
		
		
		#endregion
	
		#region Methods
		
		protected void LoadWorkspaceDocument_GEN(IDataReader reader, string companyDb)
        {
			base.CompanyDB = companyDb;
            base.ObjectState = CPCHS.Common.BusinessEntities.ObjectState.Unchanged;

			LoadFromReader(reader);
        }
	
		private void LoadFromReader(IDataReader reader)
		{
			if (reader != null && !reader.IsClosed)
            {	
				for(int i=0; i<reader.FieldCount; i++) {
					switch(reader.GetName(i).ToUpper(System.Globalization.CultureInfo.CurrentCulture)) {
						case "WORKSPACEID":
							if (!reader.IsDBNull(i)) this.workspaceId = reader.GetInt64(i);
							break;
						case "DOCUMENTID":
							if (!reader.IsDBNull(i)) this.documentId = reader.GetInt64(i);
							break;
					}
				}
            }
		}
		
		public override bool Equals(object obj)
		{
			WorkspaceDocument workspacedocument = obj as WorkspaceDocument;
			if (workspacedocument == null)
				return false;
			return workspacedocument.DocumentId == DocumentId;; 
		}
		
		public override int GetHashCode()
		{
			return base.GetHashCode ();
		}
		
		#endregion
    }
}


