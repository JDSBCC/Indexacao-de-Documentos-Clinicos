using System;
using System.Data;
using System.Xml;
using System.Xml.Serialization;
using System.IO;
using System.Text;
using System.Globalization;
using Microsoft.Practices.EnterpriseLibrary.Logging;
using CPCHS.Common.BusinessEntities;
using System.Runtime.Serialization;

namespace Cpchs.Eresults.Common.WCF.BusinessEntities.Generated
{
    /// <summary>
    /// Date Created: ter?a-feira, 20 de Julho de 2010
    /// Created By: Generated by CodeSmith
	/// Template Created By: CPCHS psilva, 2005
    /// </summary>
    [DataContract]
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly"), System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1705:LongAcronymsShouldBePascalCased"), System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707:IdentifiersShouldNotContainUnderscores"), Serializable]
    public abstract class ExternalPatient_GEN : AbstractEntity
    {	
		#region Variables
		
		private string patPatientType = string.Empty; ///
		private string patPatient = string.Empty; ///
		private string patName = string.Empty; ///
		private DateTime? patBirthDate = null; ///
		private string patAddress = string.Empty; ///
		private string patCity = string.Empty; ///
		private string patPostalCode = string.Empty; ///
		private string patPhone = string.Empty; ///
		private string patPhone2 = string.Empty; ///
		private string patSex = string.Empty; ///
		private string patBI = string.Empty; ///
		private string patSNS = string.Empty; ///
		private string patNBenef = string.Empty; ///
		private string patSocialNum = string.Empty; ///
		private string patCivilState = string.Empty; ///
		private string patEmail = string.Empty; ///
		private string patUniqueId = string.Empty; ///
		private string patProcNum = string.Empty; ///
		
	
		#endregion
		
        #region Constructors
		
		/// <summary>
        /// Initialize an new empty ExternalPatient object.
        /// </summary>
        public ExternalPatient_GEN() 
			: base(ObjectState.Added, null) 
        {
        }
	
		/// <summary>
        /// Initialize an new empty ExternalPatient object.
        /// </summary>
        public ExternalPatient_GEN(string patPatientType, string patPatient) 
			: base(ObjectState.Added , null) 
        {
			this.patPatientType = patPatientType;
			this.patPatient = patPatient;
        }
		/// <summary>
        /// Initialize an new empty ExternalPatient object.
        /// </summary>
        public ExternalPatient_GEN(IDataReader reader, string companyDB) 
			: base(ObjectState.Unchanged, null, companyDB) 
        {
			LoadFromReader(reader);
        }
		
        /// <summary>
        /// Initialize a new  ExternalPatient object with the given parameters.
        /// </summary>
        public  ExternalPatient_GEN(string patPatientType, string patPatient, string patName, DateTime? patBirthDate, string patAddress, string patCity, string patPostalCode, string patPhone, string patPhone2, string patSex, string patBI, string patSNS, string patNBenef, string patSocialNum, string patCivilState, string patEmail, string patUniqueId, string patProcNum) 
			: base(ObjectState.Added, null) 
        {	 
			this.patPatientType = patPatientType;
			this.patPatient = patPatient;
			this.patName = patName;
			this.patBirthDate = patBirthDate;
			this.patAddress = patAddress;
			this.patCity = patCity;
			this.patPostalCode = patPostalCode;
			this.patPhone = patPhone;
			this.patPhone2 = patPhone2;
			this.patSex = patSex;
			this.patBI = patBI;
			this.patSNS = patSNS;
			this.patNBenef = patNBenef;
			this.patSocialNum = patSocialNum;
			this.patCivilState = patCivilState;
			this.patEmail = patEmail;
			this.patUniqueId = patUniqueId;
			this.patProcNum = patProcNum;
        }
		#endregion
		
		#region Properties
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string PatPatientType
        {
            get { return this.patPatientType; }
            set { 
				if(this.patPatientType != value) {
					this.patPatientType = value;
					DataStateChanged(ObjectState.Modified, "PatPatientType");
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string PatPatient
        {
            get { return this.patPatient; }
            set { 
				if(this.patPatient != value) {
					this.patPatient = value;
					DataStateChanged(ObjectState.Modified, "PatPatient");
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string PatName
        {
            get { return this.patName; }
            set { 
				if(this.patName != value) {
					this.patName = value;
					DataStateChanged(ObjectState.Modified, "PatName");
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public DateTime? PatBirthDate
        {
            get { return this.patBirthDate; }
            set { 
				if(!this.patBirthDate.Equals(value)) {
					this.patBirthDate = value;
					DataStateChanged(ObjectState.Modified, "PatBirthDate");
				}
		}

		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string PatAddress
        {
            get { return this.patAddress; }
            set { 
				if(this.patAddress != value) {
					this.patAddress = value;
					DataStateChanged(ObjectState.Modified, "PatAddress");
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string PatCity
        {
            get { return this.patCity; }
            set { 
				if(this.patCity != value) {
					this.patCity = value;
					DataStateChanged(ObjectState.Modified, "PatCity");
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string PatPostalCode
        {
            get { return this.patPostalCode; }
            set { 
				if(this.patPostalCode != value) {
					this.patPostalCode = value;
					DataStateChanged(ObjectState.Modified, "PatPostalCode");
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string PatPhone
        {
            get { return this.patPhone; }
            set { 
				if(this.patPhone != value) {
					this.patPhone = value;
					DataStateChanged(ObjectState.Modified, "PatPhone");
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string PatPhone2
        {
            get { return this.patPhone2; }
            set { 
				if(this.patPhone2 != value) {
					this.patPhone2 = value;
					DataStateChanged(ObjectState.Modified, "PatPhone2");
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string PatSex
        {
            get { return this.patSex; }
            set { 
				if(this.patSex != value) {
					this.patSex = value;
					DataStateChanged(ObjectState.Modified, "PatSex");
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string PatBI
        {
            get { return this.patBI; }
            set { 
				if(this.patBI != value) {
					this.patBI = value;
					DataStateChanged(ObjectState.Modified, "PatBI");
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string PatSNS
        {
            get { return this.patSNS; }
            set { 
				if(this.patSNS != value) {
					this.patSNS = value;
					DataStateChanged(ObjectState.Modified, "PatSNS");
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string PatNBenef
        {
            get { return this.patNBenef; }
            set { 
				if(this.patNBenef != value) {
					this.patNBenef = value;
					DataStateChanged(ObjectState.Modified, "PatNBenef");
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string PatSocialNum
        {
            get { return this.patSocialNum; }
            set { 
				if(this.patSocialNum != value) {
					this.patSocialNum = value;
					DataStateChanged(ObjectState.Modified, "PatSocialNum");
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string PatCivilState
        {
            get { return this.patCivilState; }
            set { 
				if(this.patCivilState != value) {
					this.patCivilState = value;
					DataStateChanged(ObjectState.Modified, "PatCivilState");
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string PatEmail
        {
            get { return this.patEmail; }
            set { 
				if(this.patEmail != value) {
					this.patEmail = value;
					DataStateChanged(ObjectState.Modified, "PatEmail");
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string PatUniqueId
        {
            get { return this.patUniqueId; }
            set { 
				if(this.patUniqueId != value) {
					this.patUniqueId = value;
					DataStateChanged(ObjectState.Modified, "PatUniqueId");
				}
			}
		}
		
		
		[DataMember]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string PatProcNum
        {
            get { return this.patProcNum; }
            set { 
				if(this.patProcNum != value) {
					this.patProcNum = value;
					DataStateChanged(ObjectState.Modified, "PatProcNum");
				}
			}
		}
		
		
		
		#endregion
	
		#region Methods
	
		private void LoadFromReader(IDataReader reader)
		{
			if (reader != null && !reader.IsClosed)
            {	
				for(int i=0; i<reader.FieldCount; i++) {
					switch(reader.GetName(i).ToUpper(System.Globalization.CultureInfo.CurrentCulture)) {
						case "PATPATIENTTYPE":
							if (!reader.IsDBNull(i)) this.patPatientType = Convert.ToString(reader.GetValue(i));
							break;
						case "PATPATIENT":
							if (!reader.IsDBNull(i)) this.patPatient = Convert.ToString(reader.GetValue(i));
							break;
						case "PATNAME":
							if (!reader.IsDBNull(i)) this.patName = Convert.ToString(reader.GetValue(i));
							break;
						case "PATBIRTHDATE":
							if (!reader.IsDBNull(i)) this.patBirthDate = reader.GetDateTime(i);
							break;
						case "PATADDRESS":
							if (!reader.IsDBNull(i)) this.patAddress = Convert.ToString(reader.GetValue(i));
							break;
						case "PATCITY":
							if (!reader.IsDBNull(i)) this.patCity = Convert.ToString(reader.GetValue(i));
							break;
						case "PATPOSTALCODE":
							if (!reader.IsDBNull(i)) this.patPostalCode = Convert.ToString(reader.GetValue(i));
							break;
						case "PATPHONE":
							if (!reader.IsDBNull(i)) this.patPhone = Convert.ToString(reader.GetValue(i));
							break;
						case "PATPHONE2":
							if (!reader.IsDBNull(i)) this.patPhone2 = Convert.ToString(reader.GetValue(i));
							break;
						case "PATSEX":
							if (!reader.IsDBNull(i)) this.patSex = Convert.ToString(reader.GetValue(i));
							break;
						case "PATBI":
							if (!reader.IsDBNull(i)) this.patBI = Convert.ToString(reader.GetValue(i));
							break;
						case "PATSNS":
							if (!reader.IsDBNull(i)) this.patSNS = Convert.ToString(reader.GetValue(i));
							break;
						case "PATNBENEF":
							if (!reader.IsDBNull(i)) this.patNBenef = Convert.ToString(reader.GetValue(i));
							break;
						case "PATSOCIALNUM":
							if (!reader.IsDBNull(i)) this.patSocialNum = Convert.ToString(reader.GetValue(i));
							break;
						case "PATCIVILSTATE":
							if (!reader.IsDBNull(i)) this.patCivilState = Convert.ToString(reader.GetValue(i));
							break;
						case "PATEMAIL":
							if (!reader.IsDBNull(i)) this.patEmail = Convert.ToString(reader.GetValue(i));
							break;
						case "PATUNIQUEID":
							if (!reader.IsDBNull(i)) this.patUniqueId = Convert.ToString(reader.GetValue(i));
							break;
						case "PATPROCNUM":
							if (!reader.IsDBNull(i)) this.patProcNum = Convert.ToString(reader.GetValue(i));
							break;
					}
				}
            }
		}
		
		public override bool Equals(object obj)
		{
			ExternalPatient externalpatient = obj as ExternalPatient;
			if (externalpatient == null)
				return false;
			return externalpatient.PatPatient.Equals(PatPatient);; 
		}
		
		public override int GetHashCode()
		{
			return base.GetHashCode ();
		}
		
		#endregion
    }
}


