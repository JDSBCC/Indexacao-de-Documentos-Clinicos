using System;
using System.Data;
using System.Xml;
using System.Xml.Serialization;
using System.IO;
using System.Text;
using System.Globalization;

using Microsoft.Practices.EnterpriseLibrary.Logging;
	
using CPCHS.Common.BusinessEntities;
	

namespace Cpchs.Eresults.Common.WCF.BusinessEntities.Generated
{
    /// <summary>
    /// Date Created: ter?a-feira, 7 de Julho de 2009
    /// Created By: Generated by CodeSmith
	/// Template Created By: CPCHS psilva, 2005
    /// </summary>
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly"), System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1705:LongAcronymsShouldBePascalCased"), System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707:IdentifiersShouldNotContainUnderscores"), Serializable]
    public abstract class PatientLocal_GEN : AbstractEntity
    {	
		#region Variables
	
		
		private long patientLocalId; ///
		private long patientLocalParentId; ///
		private long patientLocalEntId; ///
		private long patientLocalInstId; ///
		private long patientLocalLocalId; ///
		private long patientLocalPatTypeId; ///
		private string patientLocalPat; ///
		private string patientLocalActive; ///
		
	
		#endregion
		
        #region Constructors
		
		/// <summary>
        /// Initialize an new empty PatientLocal object.
        /// </summary>
        public PatientLocal_GEN() : base(ObjectState.Added, null) 
        {
        }
	
		/// <summary>
        /// Initialize an new empty PatientLocal object.
        /// </summary>
        public PatientLocal_GEN(long patientLocalId) : base(ObjectState.Added, null) 
        {
			this.patientLocalId = patientLocalId;
        }
		/// <summary>
        /// Initialize an new empty PatientLocal object.
        /// </summary>
        public PatientLocal_GEN(IDataReader reader, string companyDB) : base(ObjectState.Unchanged, null, companyDB) 
        {
			LoadFromReader(reader);
        }
		
        /// <summary>
        /// Initialize a new  PatientLocal object with the given parameters.
        /// </summary>
        public  PatientLocal_GEN(long patientLocalId, long patientLocalParentId, long patientLocalEntId, long patientLocalInstId, long patientLocalLocalId, long patientLocalPatTypeId, string patientLocalPat, string patientLocalActive) : base(ObjectState.Added, null) 
        {	 
			this.patientLocalId = patientLocalId;
			this.patientLocalParentId = patientLocalParentId;
			this.patientLocalEntId = patientLocalEntId;
			this.patientLocalInstId = patientLocalInstId;
			this.patientLocalLocalId = patientLocalLocalId;
			this.patientLocalPatTypeId = patientLocalPatTypeId;
			this.patientLocalPat = patientLocalPat;
			this.patientLocalActive = patientLocalActive;
        }
		#endregion
		
		#region Properties
		

		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public long PatientLocalId
        {
            get { return this.patientLocalId; }
            set { 
				if(this.patientLocalId != value) {
					DataStateChanged(ObjectState.Modified, "PatientLocalId");
            		this.patientLocalId = value;
				}
			}
		}
		
		
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public long PatientLocalParentId
        {
            get { return this.patientLocalParentId; }
            set { 
				if(this.patientLocalParentId != value) {
					DataStateChanged(ObjectState.Modified, "PatientLocalParentId");
            		this.patientLocalParentId = value;
				}
			}
		}
		
		
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public long PatientLocalEntId
        {
            get { return this.patientLocalEntId; }
            set { 
				if(this.patientLocalEntId != value) {
					DataStateChanged(ObjectState.Modified, "PatientLocalEntId");
            		this.patientLocalEntId = value;
				}
			}
		}
		
		
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public long PatientLocalInstId
        {
            get { return this.patientLocalInstId; }
            set { 
				if(this.patientLocalInstId != value) {
					DataStateChanged(ObjectState.Modified, "PatientLocalInstId");
            		this.patientLocalInstId = value;
				}
			}
		}
		
		
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public long PatientLocalLocalId
        {
            get { return this.patientLocalLocalId; }
            set { 
				if(this.patientLocalLocalId != value) {
					DataStateChanged(ObjectState.Modified, "PatientLocalLocalId");
            		this.patientLocalLocalId = value;
				}
			}
		}
		
		
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public long PatientLocalPatTypeId
        {
            get { return this.patientLocalPatTypeId; }
            set { 
				if(this.patientLocalPatTypeId != value) {
					DataStateChanged(ObjectState.Modified, "PatientLocalPatTypeId");
            		this.patientLocalPatTypeId = value;
				}
			}
		}
		
		
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string PatientLocalPat
        {
            get { return this.patientLocalPat; }
            set { 
				if(this.patientLocalPat != value) {
					DataStateChanged(ObjectState.Modified, "PatientLocalPat");
            		this.patientLocalPat = value;
				}
			}
		}
		
		
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string PatientLocalActive
        {
            get { return this.patientLocalActive; }
            set { 
				if(this.patientLocalActive != value) {
					DataStateChanged(ObjectState.Modified, "PatientLocalActive");
            		this.patientLocalActive = value;
				}
			}
		}
		
		
		
		#endregion
	
		#region Methods
	
		private void LoadFromReader(IDataReader reader)
		{
			if (reader != null && !reader.IsClosed)
            {	
				for(int i=0; i<reader.FieldCount; i++) {
					switch(reader.GetName(i).ToUpper(System.Globalization.CultureInfo.CurrentCulture)) {
						case "PATIENTLOCALID":
							if (!reader.IsDBNull(i)) this.patientLocalId = reader.GetInt64(i);
							break;
						case "PATIENTLOCALPARENTID":
							if (!reader.IsDBNull(i)) this.patientLocalParentId = reader.GetInt64(i);
							break;
						case "PATIENTLOCALENTID":
							if (!reader.IsDBNull(i)) this.patientLocalEntId = reader.GetInt64(i);
							break;
						case "PATIENTLOCALINSTID":
							if (!reader.IsDBNull(i)) this.patientLocalInstId = reader.GetInt64(i);
							break;
						case "PATIENTLOCALLOCALID":
							if (!reader.IsDBNull(i)) this.patientLocalLocalId = reader.GetInt64(i);
							break;
						case "PATIENTLOCALPATTYPEID":
							if (!reader.IsDBNull(i)) this.patientLocalPatTypeId = reader.GetInt64(i);
							break;
						case "PATIENTLOCALPAT":
							if (!reader.IsDBNull(i)) this.patientLocalPat = Convert.ToString(reader.GetValue(i));
							break;
						case "PATIENTLOCALACTIVE":
							if (!reader.IsDBNull(i)) this.patientLocalActive = Convert.ToString(reader.GetValue(i));
							break;
					}
				}
            }
		}
		
		public override bool Equals(object obj)
		{
			PatientLocal patientlocal = obj as PatientLocal;
			if (patientlocal == null)
				return false;
			return patientlocal.PatientLocalId == PatientLocalId;; 
		}
		
		public override int GetHashCode()
		{
			return base.GetHashCode ();
		}
		
		#endregion
    }
}


