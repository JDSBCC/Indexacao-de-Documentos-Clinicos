using System;
using System.Data;
using System.Xml;
using System.Xml.Serialization;
using System.IO;
using System.Text;
using System.Globalization;

using Microsoft.Practices.EnterpriseLibrary.Logging;
	
using CPCHS.Common.BusinessEntities;
	

namespace Cpchs.Eresults.Common.WCF.BusinessEntities.Generated
{
    /// <summary>
    /// Date Created: sexta-feira, 10 de Julho de 2009
    /// Created By: Generated by CodeSmith
	/// Template Created By: CPCHS psilva, 2005
    /// </summary>
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly"), System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1705:LongAcronymsShouldBePascalCased"), System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707:IdentifiersShouldNotContainUnderscores"), Serializable]
    public abstract class MaritalStatus_GEN : AbstractEntity
    {	
		#region Variables
	
		
		private long marstaId; ///
		private string marstaCode; ///
		private string marstaAcronym; ///
		private string marstaDescription; ///
		
	
		#endregion
		
        #region Constructors
		
		/// <summary>
        /// Initialize an new empty MaritalStatus object.
        /// </summary>
        public MaritalStatus_GEN() : base(ObjectState.Added, null) 
        {
        }
	
		/// <summary>
        /// Initialize an new empty MaritalStatus object.
        /// </summary>
        public MaritalStatus_GEN(long marstaId) : base(ObjectState.Added, null) 
        {
			this.marstaId = marstaId;
        }
		/// <summary>
        /// Initialize an new empty MaritalStatus object.
        /// </summary>
        public MaritalStatus_GEN(IDataReader reader, string companyDB) : base(ObjectState.Unchanged, null, companyDB) 
        {
			LoadFromReader(reader);
        }
		
        /// <summary>
        /// Initialize a new  MaritalStatus object with the given parameters.
        /// </summary>
        public  MaritalStatus_GEN(long marstaId, string marstaCode, string marstaAcronym, string marstaDescription) : base(ObjectState.Added, null) 
        {	 
			this.marstaId = marstaId;
			this.marstaCode = marstaCode;
			this.marstaAcronym = marstaAcronym;
			this.marstaDescription = marstaDescription;
        }
		#endregion
		
		#region Properties
		

		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public long MarstaId
        {
            get { return this.marstaId; }
            set { 
				if(this.marstaId != value) {
					DataStateChanged(ObjectState.Modified, "MarstaId");
            		this.marstaId = value;
				}
			}
		}
		
		
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string MarstaCode
        {
            get { return this.marstaCode; }
            set { 
				if(this.marstaCode != value) {
					DataStateChanged(ObjectState.Modified, "MarstaCode");
            		this.marstaCode = value;
				}
			}
		}
		
		
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string MarstaAcronym
        {
            get { return this.marstaAcronym; }
            set { 
				if(this.marstaAcronym != value) {
					DataStateChanged(ObjectState.Modified, "MarstaAcronym");
            		this.marstaAcronym = value;
				}
			}
		}
		
		
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string MarstaDescription
        {
            get { return this.marstaDescription; }
            set { 
				if(this.marstaDescription != value) {
					DataStateChanged(ObjectState.Modified, "MarstaDescription");
            		this.marstaDescription = value;
				}
			}
		}
		
		
		
		#endregion
	
		#region Methods
	
		private void LoadFromReader(IDataReader reader)
		{
			if (reader != null && !reader.IsClosed)
            {	
				for(int i=0; i<reader.FieldCount; i++) {
					switch(reader.GetName(i).ToUpper(System.Globalization.CultureInfo.CurrentCulture)) {
						case "MARSTAID":
							if (!reader.IsDBNull(i)) this.marstaId = reader.GetInt64(i);
							break;
						case "MARSTACODE":
							if (!reader.IsDBNull(i)) this.marstaCode = Convert.ToString(reader.GetValue(i));
							break;
						case "MARSTAACRONYM":
							if (!reader.IsDBNull(i)) this.marstaAcronym = Convert.ToString(reader.GetValue(i));
							break;
						case "MARSTADESCRIPTION":
							if (!reader.IsDBNull(i)) this.marstaDescription = Convert.ToString(reader.GetValue(i));
							break;
					}
				}
            }
		}
		
		public override bool Equals(object obj)
		{
			MaritalStatus maritalstatus = obj as MaritalStatus;
			if (maritalstatus == null)
				return false;
			return maritalstatus.MarstaId == MarstaId;; 
		}
		
		public override int GetHashCode()
		{
			return base.GetHashCode ();
		}
		
		#endregion
    }
}


