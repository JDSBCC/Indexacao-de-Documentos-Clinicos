using System;
using System.Data;
using System.Xml;
using System.Xml.Serialization;
using System.IO;
using System.Text;
using System.Globalization;

using Microsoft.Practices.EnterpriseLibrary.Logging;
	
using CPCHS.Common.BusinessEntities;
	

namespace Cpchs.Eresults.Common.WCF.BusinessEntities.Generated
{
    /// <summary>
    /// Date Created: quinta-feira, 9 de Julho de 2009
    /// Created By: Generated by CodeSmith
	/// Template Created By: CPCHS psilva, 2005
    /// </summary>
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly"), System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1705:LongAcronymsShouldBePascalCased"), System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707:IdentifiersShouldNotContainUnderscores"), Serializable]
    public abstract class ErEntity_GEN : AbstractEntity
    {	
		#region Variables
	
		
		private long entId; ///
		private string entName; ///
		private string entSocialNum; ///
		private string entAddress; ///
		private string entCity; ///
		private string entPostalCode; ///
		private string entPhone1; ///
		private string entPhone2; ///
		private string entFax; ///
		
	
		#endregion
		
        #region Constructors
		
		/// <summary>
        /// Initialize an new empty ErEntity object.
        /// </summary>
        public ErEntity_GEN() : base(ObjectState.Added, null) 
        {
        }
	
		/// <summary>
        /// Initialize an new empty ErEntity object.
        /// </summary>
        public ErEntity_GEN(long entId) : base(ObjectState.Added, null) 
        {
			this.entId = entId;
        }
		/// <summary>
        /// Initialize an new empty ErEntity object.
        /// </summary>
        public ErEntity_GEN(IDataReader reader, string companyDB) : base(ObjectState.Unchanged, null, companyDB) 
        {
			LoadFromReader(reader);
        }
		
        /// <summary>
        /// Initialize a new  ErEntity object with the given parameters.
        /// </summary>
        public  ErEntity_GEN(long entId, string entName, string entSocialNum, string entAddress, string entCity, string entPostalCode, string entPhone1, string entPhone2, string entFax) : base(ObjectState.Added, null) 
        {	 
			this.entId = entId;
			this.entName = entName;
			this.entSocialNum = entSocialNum;
			this.entAddress = entAddress;
			this.entCity = entCity;
			this.entPostalCode = entPostalCode;
			this.entPhone1 = entPhone1;
			this.entPhone2 = entPhone2;
			this.entFax = entFax;
        }
		#endregion
		
		#region Properties
		

		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public long EntId
        {
            get { return this.entId; }
            set { 
				if(this.entId != value) {
					DataStateChanged(ObjectState.Modified, "EntId");
            		this.entId = value;
				}
			}
		}
		
		
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string EntName
        {
            get { return this.entName; }
            set { 
				if(this.entName != value) {
					DataStateChanged(ObjectState.Modified, "EntName");
            		this.entName = value;
				}
			}
		}
		
		
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string EntSocialNum
        {
            get { return this.entSocialNum; }
            set { 
				if(this.entSocialNum != value) {
					DataStateChanged(ObjectState.Modified, "EntSocialNum");
            		this.entSocialNum = value;
				}
			}
		}
		
		
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string EntAddress
        {
            get { return this.entAddress; }
            set { 
				if(this.entAddress != value) {
					DataStateChanged(ObjectState.Modified, "EntAddress");
            		this.entAddress = value;
				}
			}
		}
		
		
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string EntCity
        {
            get { return this.entCity; }
            set { 
				if(this.entCity != value) {
					DataStateChanged(ObjectState.Modified, "EntCity");
            		this.entCity = value;
				}
			}
		}
		
		
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string EntPostalCode
        {
            get { return this.entPostalCode; }
            set { 
				if(this.entPostalCode != value) {
					DataStateChanged(ObjectState.Modified, "EntPostalCode");
            		this.entPostalCode = value;
				}
			}
		}
		
		
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string EntPhone1
        {
            get { return this.entPhone1; }
            set { 
				if(this.entPhone1 != value) {
					DataStateChanged(ObjectState.Modified, "EntPhone1");
            		this.entPhone1 = value;
				}
			}
		}
		
		
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string EntPhone2
        {
            get { return this.entPhone2; }
            set { 
				if(this.entPhone2 != value) {
					DataStateChanged(ObjectState.Modified, "EntPhone2");
            		this.entPhone2 = value;
				}
			}
		}
		
		
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        public string EntFax
        {
            get { return this.entFax; }
            set { 
				if(this.entFax != value) {
					DataStateChanged(ObjectState.Modified, "EntFax");
            		this.entFax = value;
				}
			}
		}
		
		
		
		#endregion
	
		#region Methods
	
		private void LoadFromReader(IDataReader reader)
		{
			if (reader != null && !reader.IsClosed)
            {	
				for(int i=0; i<reader.FieldCount; i++) {
					switch(reader.GetName(i).ToUpper(System.Globalization.CultureInfo.CurrentCulture)) {
						case "ENTID":
							if (!reader.IsDBNull(i)) this.entId = reader.GetInt64(i);
							break;
						case "ENTNAME":
							if (!reader.IsDBNull(i)) this.entName = Convert.ToString(reader.GetValue(i));
							break;
						case "ENTSOCIALNUM":
							if (!reader.IsDBNull(i)) this.entSocialNum = Convert.ToString(reader.GetValue(i));
							break;
						case "ENTADDRESS":
							if (!reader.IsDBNull(i)) this.entAddress = Convert.ToString(reader.GetValue(i));
							break;
						case "ENTCITY":
							if (!reader.IsDBNull(i)) this.entCity = Convert.ToString(reader.GetValue(i));
							break;
						case "ENTPOSTALCODE":
							if (!reader.IsDBNull(i)) this.entPostalCode = Convert.ToString(reader.GetValue(i));
							break;
						case "ENTPHONE1":
							if (!reader.IsDBNull(i)) this.entPhone1 = Convert.ToString(reader.GetValue(i));
							break;
						case "ENTPHONE2":
							if (!reader.IsDBNull(i)) this.entPhone2 = Convert.ToString(reader.GetValue(i));
							break;
						case "ENTFAX":
							if (!reader.IsDBNull(i)) this.entFax = Convert.ToString(reader.GetValue(i));
							break;
					}
				}
            }
		}
		
		public override bool Equals(object obj)
		{
			ErEntity erentity = obj as ErEntity;
			if (erentity == null)
				return false;
			return erentity.EntId == EntId;; 
		}
		
		public override int GetHashCode()
		{
			return base.GetHashCode ();
		}
		
		#endregion
    }
}


