
using System;
using System.Data;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.Globalization;
using System.Runtime.Remoting.Messaging;
using Cpchs.Eresults.Common.WCF.BusinessEntities;
using CPCHS.Common.BusinessEntities;
using Microsoft.Practices.EnterpriseLibrary.Data;
using Microsoft.Practices.EnterpriseLibrary.Caching;
using Microsoft.Practices.EnterpriseLibrary.Caching.Expirations;
using Microsoft.Practices.EnterpriseLibrary.Logging;
using Microsoft.Practices.EnterpriseLibrary.ExceptionHandling;

namespace Cpchs.Eresults.Common.WCF.BusinessEntities.Generated
{
    /// <summary>
    /// Date Created: sexta-feira, 3 de Dezembro de 2010
    /// Created By: Generated by CodeSmith
	/// Template Created By: CPCHS psilva, 2005
    /// </summary>
	[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly"), System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1705:LongAcronymsShouldBePascalCased"), System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707:IdentifiersShouldNotContainUnderscores"), Serializable]
    public abstract class EntityManagementBER_GEN : CommonBER
    {
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2235:MarkAllNonSerializableFields"), System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly"), System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1051:DoNotDeclareVisibleInstanceFields")]
		protected Microsoft.Practices.EnterpriseLibrary.Data.Database dal;	
		
		#region Variables
		#endregion
	
		protected EntityManagementBER_GEN()
		{
			/*try
			{
				dal=DatabaseFactory.CreateDatabase("EntitiesWCF");
			}
			catch 
			{	
				dal = DatabaseFactory.CreateDatabase();
			}*/
	
		}
	
    //#region TABLES OPERATIONS
	
    //    #region Cache PATIENT
    //    #endregion


        //#region Select PATIENT Operations
        //
        //SELECT OPERATIONS PATIENT
        //
        //
        //
        //
        public virtual PatientList SimplePatientFind(string companyDB, string patProcessNum, string patSnsNum, Nullable<DateTime> patBirthDate, string patId, string patType, string patName, string patSex, long? tEpisodio, string episodeId, Nullable<DateTime> epiDateBegin, Nullable<DateTime> epiDateEnd, string doc, string extId, long? docTypeId, long? appId, long? localId, long? instId, Nullable<DateTime> docDateBegin, Nullable<DateTime> docDateEnd, Nullable<DateTime> valDateBegin, Nullable<DateTime> valDateEnd, string searchType, string globalFilters, string docsSession, string servsSession, string userName, string userAnaRes)
        {
            IDataReader reader = SimplePatientFindDB(companyDB, patProcessNum, patSnsNum, patBirthDate, patId, patType, patName, patSex, tEpisodio, episodeId, epiDateBegin, epiDateEnd, doc, extId, docTypeId, appId, localId, instId, docDateBegin, docDateEnd, valDateBegin, valDateEnd, searchType, globalFilters, docsSession, servsSession, userName, userAnaRes);
            PatientList list = new PatientList();
            while (reader.Read())
            {
                try
                {
                    list.Add(new Patient(reader, companyDB));
                }
                catch (Exception ex)
                {
                    // Quick Start is configured so that the Propagate Policy will
                    // log the exception and then recommend a rethrow.
                    bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
                    if (rethrow)
                    {
                        throw;
                    }
                }
            }
            reader.Close();
            return list;
        }
		
    //    //
    //    //
    //    //
    //    public virtual PatientList GetPatientByDocument(string companyDB, string docRef , long appId , long localId , long instId )
    //    {
    //        IDataReader reader = GetPatientByDocumentDB(companyDB, docRef , appId , localId , instId );
    //        PatientList list = new PatientList();
    //        while(reader.Read())
    //        {
    //            try
    //            {
    //                list.Add(new Patient(reader, companyDB));
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                    } 
    //            }
    //        } 
    //        reader.Close();
    //        return list;
    //    }
		
    //    //
    //    //
    //    //
    //    public virtual PatientList GetPatientByDocumentV2(string companyDB, string docRef , long docTypeId , long appId , long localId , long instId )
    //    {
    //        IDataReader reader = GetPatientByDocumentV2DB(companyDB, docRef , docTypeId , appId , localId , instId );
    //        PatientList list = new PatientList();
    //        while(reader.Read())
    //        {
    //            try
    //            {
    //                list.Add(new Patient(reader, companyDB));
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                    } 
    //            }
    //        } 
    //        reader.Close();
    //        return list;
    //    }
		
    //    //
    //    //
    //    //
    //    public virtual PatientList GenericPatientFind(string companyDB, string patProcessNum, string patSnsNum, Nullable<DateTime> patBirthDate, string patPatId , string patType , string patName , string patSex , string tEpisodio , string episodeId , Nullable<DateTime> epiDateBegin , Nullable<DateTime> epiDateEnd , string doc , string extId , string docTypeId , string appId , string localId , string instId , Nullable<DateTime> docDateBegin , Nullable<DateTime> docDateEnd , Nullable<DateTime> valDateBegin , Nullable<DateTime> valDateEnd , string searchType , string globalFilters , string docsSession , string servsSession , string userName , string userAnaRes , string patID )
    //    {
    //        IDataReader reader = GenericPatientFindDB(companyDB, patProcessNum, patSnsNum, patBirthDate, patPatId , patType , patName , patSex , tEpisodio , episodeId , epiDateBegin , epiDateEnd , doc , extId , docTypeId , appId , localId , instId , docDateBegin , docDateEnd , valDateBegin , valDateEnd , searchType , globalFilters , docsSession , servsSession , userName , userAnaRes , patID );
    //        PatientList list = new PatientList();
    //        while(reader.Read())
    //        {
    //            try
    //            {
    //                list.Add(new Patient(reader, companyDB));
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                    } 
    //            }
    //        } 
    //        reader.Close();
    //        return list;
    //    }
		
    //    //
    //    //
    //    //
    //    public virtual PatientList GetPatientBySamples(string companyDB, string appId , string localId , string instid , Nullable<DateTime> minDate , Nullable<DateTime> maxDate , string reqService , string execService , string state )
    //    {
    //        IDataReader reader = GetPatientBySamplesDB(companyDB, appId , localId , instid , minDate , maxDate , reqService , execService , state );
    //        PatientList list = new PatientList();
    //        while(reader.Read())
    //        {
    //            try
    //            {
    //                list.Add(new Patient(reader, companyDB));
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                    } 
    //            }
    //        } 
    //        reader.Close();
    //        return list;
    //    }
		
    //    //
    //    //
    //    //
    //    public virtual Patient GetPatientById(string companyDB, string entIds )
    //    {
    //        IDataReader reader = GetPatientByIdDB(companyDB, entIds );
    //        Patient obj = null;
    //        if(reader.Read())
    //        {
    //            try
    //            {
    //                obj = new Patient(reader, companyDB);
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                } 
    //            }
    //        } 
    //        reader.Close();

    //        return obj;
    //    }
		
    //    //
    //    //
    //    //
    //    public virtual Patient GetOrInsertPatient(string companyDB, string PatientId , string PatientType , long InstId , long PlaceId , long AppId )
    //    {
    //        IDataReader reader = GetOrInsertPatientDB(companyDB, PatientId , PatientType , InstId , PlaceId , AppId );
    //        Patient obj = null;
    //        if(reader.Read())
    //        {
    //            try
    //            {
    //                obj = new Patient(reader, companyDB);
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                } 
    //            }
    //        } 
    //        reader.Close();

    //        return obj;
    //    }
		
    //    //
    //    //
    //    //
    //    public virtual PatientList GetPatientByRequest(string companyDB, long? reqid , long? elemid )
    //    {
    //        IDataReader reader = GetPatientByRequestDB(companyDB, reqid , elemid );
    //        PatientList list = new PatientList();
    //        while(reader.Read())
    //        {
    //            try
    //            {
    //                list.Add(new Patient(reader, companyDB));
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                    } 
    //            }
    //        } 
    //        reader.Close();
    //        return list;
    //    }


        //
        // DB
        //
        protected virtual string SimplePatientFindDBMethod(string companyDB)
        {
            string proc = SimplePatientFindDBMethodName;
            string package = SimplePatientFindDBPackageName;

            dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);

            proc = GetDBMethod(dal, proc, package);

            return proc;
        }

        protected virtual string SimplePatientFindDBMethodName
        {
            get { return "SimplePatientFind"; }
        }

        protected virtual string SimplePatientFindDBPackageName
        {
            get { return "PCK_ENTITIES_ENTITY_GEN"; }
        }


        protected virtual IDataReader SimplePatientFindDB(string companyDB, string patProcessNum, string patSnsNum, Nullable<DateTime> patBirthDate, string patId, string patType, string patName, string patSex, long? tEpisodio, string episodeId, Nullable<DateTime> epiDateBegin, Nullable<DateTime> epiDateEnd, string doc, string extId, long? docTypeId, long? appId, long? localId, long? instId, Nullable<DateTime> docDateBegin, Nullable<DateTime> docDateEnd, Nullable<DateTime> valDateBegin, Nullable<DateTime> valDateEnd, string searchType, string globalFilters, string docsSession, string servsSession, string userName, string userAnaRes)
        {
            IDataReader ret = null;
            try
            {
                string dbMethod = SimplePatientFindDBMethod(companyDB);
                DbCommand dbCommand;

                dbCommand = GetStoredProcCommand(dal, dbMethod, patProcessNum, patSnsNum, patBirthDate, patId, patType, patName, patSex, tEpisodio, episodeId, epiDateBegin, epiDateEnd, doc, extId, docTypeId, appId, localId, instId, docDateBegin, docDateEnd, valDateBegin, valDateEnd, searchType, globalFilters, docsSession, servsSession, userName, userAnaRes, DBNull.Value);
                ret = dal.ExecuteReader(dbCommand);


            }
            catch (Exception ex)
            {
                // Quick Start is configured so that the Propagate Policy will
                // log the exception and then recommend a rethrow.
                bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
                if (rethrow)
                {
                    throw;
                }
            }
            return ret;
        }
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetPatientByDocumentDBMethod(string companyDB)
    //    {
    //        string proc = GetPatientByDocumentDBMethodName;
    //        string package = GetPatientByDocumentDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetPatientByDocumentDBMethodName
    //    {
    //        get { return "GetPatientByDocument"; }
    //    }
		
    //    protected virtual string GetPatientByDocumentDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetPatientByDocumentDB(string companyDB, string docRef , long appId , long localId , long instId )
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetPatientByDocumentDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, docRef , appId , localId , instId , DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetPatientByDocumentV2DBMethod(string companyDB)
    //    {
    //        string proc = GetPatientByDocumentV2DBMethodName;
    //        string package = GetPatientByDocumentV2DBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetPatientByDocumentV2DBMethodName
    //    {
    //        get { return "GetPatientByDocumentV2"; }
    //    }
		
    //    protected virtual string GetPatientByDocumentV2DBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetPatientByDocumentV2DB(string companyDB, string docRef , long docTypeId , long appId , long localId , long instId )
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetPatientByDocumentV2DBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, docRef , docTypeId , appId , localId , instId , DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GenericPatientFindDBMethod(string companyDB)
    //    {
    //        string proc = GenericPatientFindDBMethodName;
    //        string package = GenericPatientFindDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GenericPatientFindDBMethodName
    //    {
    //        get { return "GenericPatientFind"; }
    //    }
		
    //    protected virtual string GenericPatientFindDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GenericPatientFindDB(string companyDB, string patProcessNum, string patSnsNum, Nullable<DateTime> patBirthDate, string patPatId , string patType , string patName , string patSex , string tEpisodio , string episodeId , Nullable<DateTime> epiDateBegin , Nullable<DateTime> epiDateEnd , string doc , string extId , string docTypeId , string appId , string localId , string instId , Nullable<DateTime> docDateBegin , Nullable<DateTime> docDateEnd , Nullable<DateTime> valDateBegin , Nullable<DateTime> valDateEnd , string searchType , string globalFilters , string docsSession , string servsSession , string userName , string userAnaRes , string patID )
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GenericPatientFindDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, patProcessNum, patSnsNum, patBirthDate, patPatId , patType , patName , patSex , tEpisodio , episodeId , epiDateBegin , epiDateEnd , doc , extId , docTypeId , appId , localId , instId , docDateBegin , docDateEnd , valDateBegin , valDateEnd , searchType , globalFilters , docsSession , servsSession , userName , userAnaRes , patID , DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetPatientBySamplesDBMethod(string companyDB)
    //    {
    //        string proc = GetPatientBySamplesDBMethodName;
    //        string package = GetPatientBySamplesDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetPatientBySamplesDBMethodName
    //    {
    //        get { return "GetPatientBySamples"; }
    //    }
		
    //    protected virtual string GetPatientBySamplesDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetPatientBySamplesDB(string companyDB, string appId , string localId , string instid , Nullable<DateTime> minDate , Nullable<DateTime> maxDate , string reqService , string execService , string state )
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetPatientBySamplesDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, appId , localId , instid , minDate , maxDate , reqService , execService , state , DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetPatientByIdDBMethod(string companyDB)
    //    {
    //        string proc = GetPatientByIdDBMethodName;
    //        string package = GetPatientByIdDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetPatientByIdDBMethodName
    //    {
    //        get { return "GetPatientById"; }
    //    }
		
    //    protected virtual string GetPatientByIdDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetPatientByIdDB(string companyDB, string entIds )
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetPatientByIdDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, entIds , DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetOrInsertPatientDBMethod(string companyDB)
    //    {
    //        string proc = GetOrInsertPatientDBMethodName;
    //        string package = GetOrInsertPatientDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetOrInsertPatientDBMethodName
    //    {
    //        get { return "GetOrInsertPatient"; }
    //    }
		
    //    protected virtual string GetOrInsertPatientDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetOrInsertPatientDB(string companyDB, string PatientId , string PatientType , long InstId , long PlaceId , long AppId )
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetOrInsertPatientDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, PatientId , PatientType , InstId , PlaceId , AppId , DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetPatientByRequestDBMethod(string companyDB)
    //    {
    //        string proc = GetPatientByRequestDBMethodName;
    //        string package = GetPatientByRequestDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetPatientByRequestDBMethodName
    //    {
    //        get { return "GetPatientByRequest"; }
    //    }
		
    //    protected virtual string GetPatientByRequestDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetPatientByRequestDB(string companyDB, long? reqid , long? elemid )
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetPatientByRequestDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, reqid , elemid , DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		

    //    #endregion
		
    //    #region Cache SERVICE
    //    #endregion
	
	
    //    #region Select SERVICE Operations
    //    //
    //    //SELECT OPERATIONS SERVICE
    //    //
    //    //
    //    //
    //    //
        public virtual ServiceList GetAllServices(string companyDB)
        {
            IDataReader reader = GetAllServicesDB(companyDB);
            ServiceList list = new ServiceList();
            while (reader.Read())
            {
                try
                {
                    list.Add(new Service(reader, companyDB));
                }
                catch (Exception ex)
                {
                    // Quick Start is configured so that the Propagate Policy will
                    // log the exception and then recommend a rethrow.
                    bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
                    if (rethrow)
                    {
                        throw;
                    }
                }
            }
            reader.Close();
            return list;
        }
		
    //    //
    //    //
    //    //
    //    public virtual ServiceList GetFavoriteServicesForDoctor(string companyDB, string doctorId , string service , string local , string inst )
    //    {
    //        IDataReader reader = GetFavoriteServicesForDoctorDB(companyDB, doctorId , service , local , inst );
    //        ServiceList list = new ServiceList();
    //        while(reader.Read())
    //        {
    //            try
    //            {
    //                list.Add(new Service(reader, companyDB));
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                    } 
    //            }
    //        } 
    //        reader.Close();
    //        return list;
    //    }
		
    //    //
    //    //
    //    //
    //    public virtual ServiceList GetServicesForDoctor(string companyDB, string doctorId , string service , string local , string inst )
    //    {
    //        IDataReader reader = GetServicesForDoctorDB(companyDB, doctorId , service , local , inst );
    //        ServiceList list = new ServiceList();
    //        while(reader.Read())
    //        {
    //            try
    //            {
    //                list.Add(new Service(reader, companyDB));
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                    } 
    //            }
    //        } 
    //        reader.Close();
    //        return list;
    //    }
		
        //
        //
        //
        public virtual ServiceList GetServicesForExternalAccess(string companyDB, string entIds , long? epiTypeId , string epiId , long? instId , long? placeId , long? appId , long? docTypeId , string docRef , string elemType )
        {
            IDataReader reader = GetServicesForExternalAccessDB(companyDB, entIds , epiTypeId , epiId , instId , placeId , appId , docTypeId , docRef , elemType );
            ServiceList list = new ServiceList();
            while(reader.Read())
            {
                try
                {
                    list.Add(new Service(reader, companyDB));
                }
                catch(Exception ex)
                {
                    // Quick Start is configured so that the Propagate Policy will
                    // log the exception and then recommend a rethrow.
                    bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
                    if (rethrow)
                    {
                        throw;
                        } 
                }
            } 
            reader.Close();
            return list;
        }
		
    //    //
    //    //
    //    //
    //    public virtual ServiceList GetServicesForSampleCol(string companyDB, string doctorId , string service , string local , string inst )
    //    {
    //        IDataReader reader = GetServicesForSampleColDB(companyDB, doctorId , service , local , inst );
    //        ServiceList list = new ServiceList();
    //        while(reader.Read())
    //        {
    //            try
    //            {
    //                list.Add(new Service(reader, companyDB));
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                    } 
    //            }
    //        } 
    //        reader.Close();
    //        return list;
    //    }
		
    //    //
    //    //
    //    //
    //    public virtual Service GetServiceByCode(string companyDB, string serviceCode)
    //    {
    //        IDataReader reader = GetServiceByCodeDB(companyDB, serviceCode);
    //        Service obj = null;
    //        if(reader.Read())
    //        {
    //            try
    //            {
    //                obj = new Service(reader, companyDB);
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                } 
    //            }
    //        } 
    //        reader.Close();

    //        return obj;
    //    }


        //
        // DB
        //
        protected virtual string GetAllServicesDBMethod(string companyDB)
        {
            string proc = GetAllServicesDBMethodName;
            string package = GetAllServicesDBPackageName;

            dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);

            proc = GetDBMethod(dal, proc, package);

            return proc;
        }

        protected virtual string GetAllServicesDBMethodName
        {
            get { return "GetAllServices"; }
        }

        protected virtual string GetAllServicesDBPackageName
        {
            get { return "PCK_ENTITIES_ENTITY_GEN"; }
        }


        protected virtual IDataReader GetAllServicesDB(string companyDB)
        {
            IDataReader ret = null;
            try
            {
                string dbMethod = GetAllServicesDBMethod(companyDB);
                DbCommand dbCommand;

                dbCommand = GetStoredProcCommand(dal, dbMethod, DBNull.Value);
                ret = dal.ExecuteReader(dbCommand);


            }
            catch (Exception ex)
            {
                // Quick Start is configured so that the Propagate Policy will
                // log the exception and then recommend a rethrow.
                bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
                if (rethrow)
                {
                    throw;
                }
            }
            return ret;
        }
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetFavoriteServicesForDoctorDBMethod(string companyDB)
    //    {
    //        string proc = GetFavoriteServicesForDoctorDBMethodName;
    //        string package = GetFavoriteServicesForDoctorDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetFavoriteServicesForDoctorDBMethodName
    //    {
    //        get { return "GetFavoriteServicesForDoctor"; }
    //    }
		
    //    protected virtual string GetFavoriteServicesForDoctorDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetFavoriteServicesForDoctorDB(string companyDB, string doctorId , string service , string local , string inst )
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetFavoriteServicesForDoctorDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, doctorId , service , local , inst , DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetServicesForDoctorDBMethod(string companyDB)
    //    {
    //        string proc = GetServicesForDoctorDBMethodName;
    //        string package = GetServicesForDoctorDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetServicesForDoctorDBMethodName
    //    {
    //        get { return "GetServicesForDoctor"; }
    //    }
		
    //    protected virtual string GetServicesForDoctorDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetServicesForDoctorDB(string companyDB, string doctorId , string service , string local , string inst )
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetServicesForDoctorDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, doctorId , service , local , inst , DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		
        //
        // DB
        //
        protected virtual string GetServicesForExternalAccessDBMethod(string companyDB)
        {
            string proc = GetServicesForExternalAccessDBMethodName;
            string package = GetServicesForExternalAccessDBPackageName;
			
            dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
            proc = GetDBMethod(dal, proc, package);
			
            return proc;
        }
		
        protected virtual string GetServicesForExternalAccessDBMethodName
        {
            get { return "GetServicesForExternalAccess"; }
        }
		
        protected virtual string GetServicesForExternalAccessDBPackageName
        {
            get { return "PCK_ENTITIES_ENTITY_GEN"; }
        }

		
        protected virtual IDataReader GetServicesForExternalAccessDB(string companyDB, string entIds , long? epiTypeId , string epiId , long? instId , long? placeId , long? appId , long? docTypeId , string docRef , string elemType )
        {
            IDataReader ret = null;
            try
            {
                string dbMethod = GetServicesForExternalAccessDBMethod(companyDB);
                DbCommand dbCommand;
                
                dbCommand = GetStoredProcCommand(dal, dbMethod, entIds , epiTypeId , epiId , instId , placeId , appId , docTypeId , docRef , elemType , DBNull.Value);
                ret = dal.ExecuteReader(dbCommand);
                
                
            }
            catch(Exception ex)
            {
                // Quick Start is configured so that the Propagate Policy will
                // log the exception and then recommend a rethrow.
                bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
                if (rethrow)
                {
                    throw;
                } 
            }
            return ret;
        }
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetServicesForSampleColDBMethod(string companyDB)
    //    {
    //        string proc = GetServicesForSampleColDBMethodName;
    //        string package = GetServicesForSampleColDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetServicesForSampleColDBMethodName
    //    {
    //        get { return "GetServicesForSampleCol"; }
    //    }
		
    //    protected virtual string GetServicesForSampleColDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetServicesForSampleColDB(string companyDB, string doctorId , string service , string local , string inst )
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetServicesForSampleColDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, doctorId , service , local , inst , DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetServiceByCodeDBMethod(string companyDB)
    //    {
    //        string proc = GetServiceByCodeDBMethodName;
    //        string package = GetServiceByCodeDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetServiceByCodeDBMethodName
    //    {
    //        get { return "GetServiceByCode"; }
    //    }
		
    //    protected virtual string GetServiceByCodeDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetServiceByCodeDB(string companyDB, string serviceCode)
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetServiceByCodeDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, serviceCode, DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		

    //    #endregion
		
    //    #region Cache INSTITUTION
    //    #endregion
	
	
        //#region Select INSTITUTION Operations
        //
        //SELECT OPERATIONS INSTITUTION
        //
        //
        //
        //
        public virtual InstitutionList GetAllInstitutions(string companyDB)
        {
            IDataReader reader = GetAllInstitutionsDB(companyDB);
            InstitutionList list = new InstitutionList();
            while(reader.Read())
            {
                try
                {
                    list.Add(new Institution(reader, companyDB));
                }
                catch(Exception ex)
                {
                    // Quick Start is configured so that the Propagate Policy will
                    // log the exception and then recommend a rethrow.
                    bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
                    if (rethrow)
                    {
                        throw;
                        } 
                }
            } 
            reader.Close();
            return list;
        }
		
    //    //
    //    //
    //    //
    //    public virtual Institution GetInstitutionByCode(string companyDB, string institutionCode)
    //    {
    //        IDataReader reader = GetInstitutionByCodeDB(companyDB, institutionCode);
    //        Institution obj = null;
    //        if(reader.Read())
    //        {
    //            try
    //            {
    //                obj = new Institution(reader, companyDB);
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                } 
    //            }
    //        } 
    //        reader.Close();

    //        return obj;
    //    }
		
		
        //
        // DB
        //
        protected virtual string GetAllInstitutionsDBMethod(string companyDB)
        {
            string proc = GetAllInstitutionsDBMethodName;
            string package = GetAllInstitutionsDBPackageName;
			
            dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
            proc = GetDBMethod(dal, proc, package);
			
            return proc;
        }
		
        protected virtual string GetAllInstitutionsDBMethodName
        {
            get { return "GetAllInstitutions"; }
        }
		
        protected virtual string GetAllInstitutionsDBPackageName
        {
            get { return "PCK_ENTITIES_ENTITY_GEN"; }
        }

		
        protected virtual IDataReader GetAllInstitutionsDB(string companyDB)
        {
            IDataReader ret = null;
            try
            {
                string dbMethod = GetAllInstitutionsDBMethod(companyDB);
                DbCommand dbCommand;
                
                dbCommand = GetStoredProcCommand(dal, dbMethod, DBNull.Value);
                ret = dal.ExecuteReader(dbCommand);
                
                
            }
            catch(Exception ex)
            {
                // Quick Start is configured so that the Propagate Policy will
                // log the exception and then recommend a rethrow.
                bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
                if (rethrow)
                {
                    throw;
                } 
            }
            return ret;
        }
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetInstitutionByCodeDBMethod(string companyDB)
    //    {
    //        string proc = GetInstitutionByCodeDBMethodName;
    //        string package = GetInstitutionByCodeDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetInstitutionByCodeDBMethodName
    //    {
    //        get { return "GetInstitutionByCode"; }
    //    }
		
    //    protected virtual string GetInstitutionByCodeDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetInstitutionByCodeDB(string companyDB, string institutionCode)
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetInstitutionByCodeDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, institutionCode, DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		

    //    #endregion
		
    //    #region Cache PRIORITY
    //    #endregion
	
	
    //    #region Select PRIORITY Operations
    //    //
    //    //SELECT OPERATIONS PRIORITY
    //    //
    //    //
    //    //
    //    //
    //    public virtual PriorityList GetAllPriorities(string companyDB)
    //    {
    //        IDataReader reader = GetAllPrioritiesDB(companyDB);
    //        PriorityList list = new PriorityList();
    //        while(reader.Read())
    //        {
    //            try
    //            {
    //                list.Add(new Priority(reader, companyDB));
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                    } 
    //            }
    //        } 
    //        reader.Close();
    //        return list;
    //    }
		
    //    //
    //    //
    //    //
    //    public virtual Priority GetPriorityById(string companyDB, long priorityId)
    //    {
    //        IDataReader reader = GetPriorityByIdDB(companyDB, priorityId);
    //        Priority obj = null;
    //        if(reader.Read())
    //        {
    //            try
    //            {
    //                obj = new Priority(reader, companyDB);
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                } 
    //            }
    //        } 
    //        reader.Close();

    //        return obj;
    //    }
		
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetAllPrioritiesDBMethod(string companyDB)
    //    {
    //        string proc = GetAllPrioritiesDBMethodName;
    //        string package = GetAllPrioritiesDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetAllPrioritiesDBMethodName
    //    {
    //        get { return "GetAllPriorities"; }
    //    }
		
    //    protected virtual string GetAllPrioritiesDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetAllPrioritiesDB(string companyDB)
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetAllPrioritiesDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetPriorityByIdDBMethod(string companyDB)
    //    {
    //        string proc = GetPriorityByIdDBMethodName;
    //        string package = GetPriorityByIdDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetPriorityByIdDBMethodName
    //    {
    //        get { return "GetPriorityById"; }
    //    }
		
    //    protected virtual string GetPriorityByIdDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetPriorityByIdDB(string companyDB, long priorityId)
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetPriorityByIdDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, priorityId, DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		

    //    #endregion
		
    //    #region Cache STATE
    //    #endregion
	
	
    //    #region Select STATE Operations
    //    //
    //    //SELECT OPERATIONS STATE
    //    //
    //    //
    //    //
    //    //
    //    public virtual StateList GetAllStates(string companyDB)
    //    {
    //        IDataReader reader = GetAllStatesDB(companyDB);
    //        StateList list = new StateList();
    //        while(reader.Read())
    //        {
    //            try
    //            {
    //                list.Add(new State(reader, companyDB));
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                    } 
    //            }
    //        } 
    //        reader.Close();
    //        return list;
    //    }
		
    //    //
    //    //
    //    //
    //    public virtual State GetStateById(string companyDB, long stateId)
    //    {
    //        IDataReader reader = GetStateByIdDB(companyDB, stateId);
    //        State obj = null;
    //        if(reader.Read())
    //        {
    //            try
    //            {
    //                obj = new State(reader, companyDB);
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                } 
    //            }
    //        } 
    //        reader.Close();

    //        return obj;
    //    }

        //
        //
        //
        public virtual StateList GetStates(string companyDB, string stateScope)
        {
            IDataReader reader = GetStatesDB(companyDB, stateScope);
            StateList list = new StateList();
            while (reader.Read())
            {
                try
                {
                    list.Add(new State(reader, companyDB));
                }
                catch (Exception ex)
                {
                    // Quick Start is configured so that the Propagate Policy will
                    // log the exception and then recommend a rethrow.
                    bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
                    if (rethrow)
                    {
                        throw;
                    }
                }
            }
            reader.Close();
            return list;
        }
		
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetAllStatesDBMethod(string companyDB)
    //    {
    //        string proc = GetAllStatesDBMethodName;
    //        string package = GetAllStatesDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetAllStatesDBMethodName
    //    {
    //        get { return "GetAllStates"; }
    //    }
		
    //    protected virtual string GetAllStatesDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetAllStatesDB(string companyDB)
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetAllStatesDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetStateByIdDBMethod(string companyDB)
    //    {
    //        string proc = GetStateByIdDBMethodName;
    //        string package = GetStateByIdDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetStateByIdDBMethodName
    //    {
    //        get { return "GetStateById"; }
    //    }
		
    //    protected virtual string GetStateByIdDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetStateByIdDB(string companyDB, long stateId)
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetStateByIdDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, stateId, DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }

        //
        // DB
        //
        protected virtual string GetStatesDBMethod(string companyDB)
        {
            string proc = GetStatesDBMethodName;
            string package = GetStatesDBPackageName;

            dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);

            proc = GetDBMethod(dal, proc, package);

            return proc;
        }

        protected virtual string GetStatesDBMethodName
        {
            get { return "GetStates"; }
        }

        protected virtual string GetStatesDBPackageName
        {
            get { return "PCK_ENTITIES_ENTITY_GEN"; }
        }


        protected virtual IDataReader GetStatesDB(string companyDB, string stateScope)
        {
            IDataReader ret = null;
            try
            {
                string dbMethod = GetStatesDBMethod(companyDB);
                DbCommand dbCommand;

                dbCommand = GetStoredProcCommand(dal, dbMethod, stateScope, DBNull.Value);
                ret = dal.ExecuteReader(dbCommand);


            }
            catch (Exception ex)
            {
                // Quick Start is configured so that the Propagate Policy will
                // log the exception and then recommend a rethrow.
                bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
                if (rethrow)
                {
                    throw;
                }
            }
            return ret;
        }
		

    //    #endregion
		
    //    #region Cache ERENTITY
    //    #endregion
	
	
    //    #region Select ERENTITY Operations
    //    //
    //    //SELECT OPERATIONS ERENTITY
    //    //
    //    //
    //    //
    //    //
    //    public virtual ErEntityList GetSampleInfoEntities(string companyDB, long? sampleId , long? tubeid , long? sampleversion )
    //    {
    //        IDataReader reader = GetSampleInfoEntitiesDB(companyDB, sampleId , tubeid , sampleversion );
    //        ErEntityList list = new ErEntityList();
    //        while(reader.Read())
    //        {
    //            try
    //            {
    //                list.Add(new ErEntity(reader, companyDB));
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                    } 
    //            }
    //        } 
    //        reader.Close();
    //        return list;
    //    }
		
    //    //
    //    //
    //    //
    //    public virtual ErEntity GetEntityBySession(string companyDB, string session , string section )
    //    {
    //        IDataReader reader = GetEntityBySessionDB(companyDB, session , section );
    //        ErEntity obj = null;
    //        if(reader.Read())
    //        {
    //            try
    //            {
    //                obj = new ErEntity(reader, companyDB);
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                } 
    //            }
    //        } 
    //        reader.Close();

    //        return obj;
    //    }
		
    //    //
    //    //
    //    //
    //    public virtual ErEntity GetOrInsertEntity(string companyDB, string Name , string NMecan , string ReqService , string Type , long InstId , long PlaceId , long AppId )
    //    {
    //        IDataReader reader = GetOrInsertEntityDB(companyDB, Name , NMecan , ReqService , Type , InstId , PlaceId , AppId );
    //        ErEntity obj = null;
    //        if(reader.Read())
    //        {
    //            try
    //            {
    //                obj = new ErEntity(reader, companyDB);
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                } 
    //            }
    //        } 
    //        reader.Close();

    //        return obj;
    //    }
		
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetSampleInfoEntitiesDBMethod(string companyDB)
    //    {
    //        string proc = GetSampleInfoEntitiesDBMethodName;
    //        string package = GetSampleInfoEntitiesDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetSampleInfoEntitiesDBMethodName
    //    {
    //        get { return "GetSampleInfoEntities"; }
    //    }
		
    //    protected virtual string GetSampleInfoEntitiesDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetSampleInfoEntitiesDB(string companyDB, long? sampleId , long? tubeid , long? sampleversion )
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetSampleInfoEntitiesDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, sampleId , tubeid , sampleversion , DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetEntityBySessionDBMethod(string companyDB)
    //    {
    //        string proc = GetEntityBySessionDBMethodName;
    //        string package = GetEntityBySessionDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetEntityBySessionDBMethodName
    //    {
    //        get { return "GetEntityBySession"; }
    //    }
		
    //    protected virtual string GetEntityBySessionDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetEntityBySessionDB(string companyDB, string session , string section )
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetEntityBySessionDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, session , section , DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetOrInsertEntityDBMethod(string companyDB)
    //    {
    //        string proc = GetOrInsertEntityDBMethodName;
    //        string package = GetOrInsertEntityDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetOrInsertEntityDBMethodName
    //    {
    //        get { return "GetOrInsertEntity"; }
    //    }
		
    //    protected virtual string GetOrInsertEntityDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetOrInsertEntityDB(string companyDB, string Name , string NMecan , string ReqService , string Type , long InstId , long PlaceId , long AppId )
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetOrInsertEntityDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, Name , NMecan , ReqService , Type , InstId , PlaceId , AppId , DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		

    //    #endregion
		
    //    #region Cache GROUP
    //    #endregion
	
	
    //    #region Select GROUP Operations
    //    //
    //    //SELECT OPERATIONS GROUP
    //    //
    //    //
    //    //
    //    //
    //    public virtual GroupList GetAllGroups(string companyDB, string groupScope)
    //    {
    //        IDataReader reader = GetAllGroupsDB(companyDB, groupScope);
    //        GroupList list = new GroupList();
    //        while(reader.Read())
    //        {
    //            try
    //            {
    //                list.Add(new Group(reader, companyDB));
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                    } 
    //            }
    //        } 
    //        reader.Close();
    //        return list;
    //    }
		
    //    //
    //    //
    //    //
    //    public virtual Group GetGroupById(string companyDB, long groupId)
    //    {
    //        IDataReader reader = GetGroupByIdDB(companyDB, groupId);
    //        Group obj = null;
    //        if(reader.Read())
    //        {
    //            try
    //            {
    //                obj = new Group(reader, companyDB);
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                } 
    //            }
    //        } 
    //        reader.Close();

    //        return obj;
    //    }
		
    //    //
    //    //
    //    //
    //    public virtual GroupList GetAllGroupsBySpecs(string companyDB, string groupScope, string localId , string instId , string doctEntId , string reqServ , string execServ )
    //    {
    //        IDataReader reader = GetAllGroupsBySpecsDB(companyDB, groupScope, localId , instId , doctEntId , reqServ , execServ );
    //        GroupList list = new GroupList();
    //        while(reader.Read())
    //        {
    //            try
    //            {
    //                list.Add(new Group(reader, companyDB));
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                    } 
    //            }
    //        } 
    //        reader.Close();
    //        return list;
    //    }
		
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetAllGroupsDBMethod(string companyDB)
    //    {
    //        string proc = GetAllGroupsDBMethodName;
    //        string package = GetAllGroupsDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetAllGroupsDBMethodName
    //    {
    //        get { return "GetAllGroups"; }
    //    }
		
    //    protected virtual string GetAllGroupsDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetAllGroupsDB(string companyDB, string groupScope)
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetAllGroupsDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, groupScope, DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetGroupByIdDBMethod(string companyDB)
    //    {
    //        string proc = GetGroupByIdDBMethodName;
    //        string package = GetGroupByIdDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetGroupByIdDBMethodName
    //    {
    //        get { return "GetGroupById"; }
    //    }
		
    //    protected virtual string GetGroupByIdDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetGroupByIdDB(string companyDB, long groupId)
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetGroupByIdDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, groupId, DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetAllGroupsBySpecsDBMethod(string companyDB)
    //    {
    //        string proc = GetAllGroupsBySpecsDBMethodName;
    //        string package = GetAllGroupsBySpecsDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetAllGroupsBySpecsDBMethodName
    //    {
    //        get { return "GetAllGroupsBySpecs"; }
    //    }
		
    //    protected virtual string GetAllGroupsBySpecsDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetAllGroupsBySpecsDB(string companyDB, string groupScope, string localId , string instId , string doctEntId , string reqServ , string execServ )
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetAllGroupsBySpecsDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, groupScope, localId , instId , doctEntId , reqServ , execServ , DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		

    //    #endregion
		
    //    #region Cache GROUPEXAM
    //    #endregion
	
	
    //    #region Select GROUPEXAM Operations
    //    //
    //    //SELECT OPERATIONS GROUPEXAM
    //    //
    //    //
    //    //
    //    //
    //    public virtual GroupExamList GetGroupExamsBySpecs(string companyDB, long groupExamInstId, long groupExamLocalId, string scope , long? execServ , long? reqServ , long? docEntId )
    //    {
    //        IDataReader reader = GetGroupExamsBySpecsDB(companyDB, groupExamInstId, groupExamLocalId, scope , execServ , reqServ , docEntId );
    //        GroupExamList list = new GroupExamList();
    //        while(reader.Read())
    //        {
    //            try
    //            {
    //                list.Add(new GroupExam(reader, companyDB));
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                    } 
    //            }
    //        } 
    //        reader.Close();
    //        return list;
    //    }
		
    //    //
    //    //
    //    //
    //    public virtual GroupExamList GetGroupExamsByGroup(string companyDB, long groupExamId, string inst , string place )
    //    {
    //        IDataReader reader = GetGroupExamsByGroupDB(companyDB, groupExamId, inst , place );
    //        GroupExamList list = new GroupExamList();
    //        while(reader.Read())
    //        {
    //            try
    //            {
    //                list.Add(new GroupExam(reader, companyDB));
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                    } 
    //            }
    //        } 
    //        reader.Close();
    //        return list;
    //    }
		
    //    //
    //    //
    //    //
    //    public virtual GroupExam CountGroupExamsByGroup(string companyDB, long groupExamId, long groupExamInstId, long groupExamLocalId)
    //    {
    //        IDataReader reader = CountGroupExamsByGroupDB(companyDB, groupExamId, groupExamInstId, groupExamLocalId);
    //        GroupExam obj = null;
    //        if(reader.Read())
    //        {
    //            try
    //            {
    //                obj = new GroupExam(reader, companyDB);
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                } 
    //            }
    //        } 
    //        reader.Close();

    //        return obj;
    //    }
		
    //    //
    //    //
    //    //
    //    public virtual GroupExamList GetExamsBySearchCriteria(string companyDB, string institution , string place , string searchKey , string docEntId , string reqServ , string execServ , long? pageNumber , long? itemsPerPage , string orderField , string orderType )
    //    {
    //        IDataReader reader = GetExamsBySearchCriteriaDB(companyDB, institution , place , searchKey , docEntId , reqServ , execServ , pageNumber , itemsPerPage , orderField , orderType );
    //        GroupExamList list = new GroupExamList();
    //        while(reader.Read())
    //        {
    //            try
    //            {
    //                list.Add(new GroupExam(reader, companyDB));
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                    } 
    //            }
    //        } 
    //        reader.Close();
    //        return list;
    //    }
		
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetGroupExamsBySpecsDBMethod(string companyDB)
    //    {
    //        string proc = GetGroupExamsBySpecsDBMethodName;
    //        string package = GetGroupExamsBySpecsDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetGroupExamsBySpecsDBMethodName
    //    {
    //        get { return "GetGroupExamsBySpecs"; }
    //    }
		
    //    protected virtual string GetGroupExamsBySpecsDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetGroupExamsBySpecsDB(string companyDB, long groupExamInstId, long groupExamLocalId, string scope , long? execServ , long? reqServ , long? docEntId )
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetGroupExamsBySpecsDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, groupExamInstId, groupExamLocalId, scope , execServ , reqServ , docEntId , DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetGroupExamsByGroupDBMethod(string companyDB)
    //    {
    //        string proc = GetGroupExamsByGroupDBMethodName;
    //        string package = GetGroupExamsByGroupDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetGroupExamsByGroupDBMethodName
    //    {
    //        get { return "GetGroupExamsByGroup"; }
    //    }
		
    //    protected virtual string GetGroupExamsByGroupDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetGroupExamsByGroupDB(string companyDB, long groupExamId, string inst , string place )
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetGroupExamsByGroupDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, groupExamId, inst , place , DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		
    //    //
    //    // DB
    //    //
    //    protected virtual string CountGroupExamsByGroupDBMethod(string companyDB)
    //    {
    //        string proc = CountGroupExamsByGroupDBMethodName;
    //        string package = CountGroupExamsByGroupDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string CountGroupExamsByGroupDBMethodName
    //    {
    //        get { return "CountGroupExamsByGroup"; }
    //    }
		
    //    protected virtual string CountGroupExamsByGroupDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader CountGroupExamsByGroupDB(string companyDB, long groupExamId, long groupExamInstId, long groupExamLocalId)
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = CountGroupExamsByGroupDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, groupExamId, groupExamInstId, groupExamLocalId, DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetExamsBySearchCriteriaDBMethod(string companyDB)
    //    {
    //        string proc = GetExamsBySearchCriteriaDBMethodName;
    //        string package = GetExamsBySearchCriteriaDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetExamsBySearchCriteriaDBMethodName
    //    {
    //        get { return "GetExamsBySearchCriteria"; }
    //    }
		
    //    protected virtual string GetExamsBySearchCriteriaDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetExamsBySearchCriteriaDB(string companyDB, string institution , string place , string searchKey , string docEntId , string reqServ , string execServ , long? pageNumber , long? itemsPerPage , string orderField , string orderType )
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetExamsBySearchCriteriaDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, institution , place , searchKey , docEntId , reqServ , execServ , pageNumber , itemsPerPage , orderField , orderType , DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		

    //    #endregion
		
    //    #region Cache GENDER
    //    #endregion
	
	
    //    #region Select GENDER Operations
    //    //
    //    //SELECT OPERATIONS GENDER
    //    //
    //    //
    //    //
    //    //
        public virtual GenderList GetAllGenders(string companyDB)
        {
            IDataReader reader = GetAllGendersDB(companyDB);
            GenderList list = new GenderList();
            while (reader.Read())
            {
                try
                {
                    list.Add(new Gender(reader, companyDB));
                }
                catch (Exception ex)
                {
                    // Quick Start is configured so that the Propagate Policy will
                    // log the exception and then recommend a rethrow.
                    bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
                    if (rethrow)
                    {
                        throw;
                    }
                }
            }
            reader.Close();
            return list;
        }


        //
        // DB
        //
        protected virtual string GetAllGendersDBMethod(string companyDB)
        {
            string proc = GetAllGendersDBMethodName;
            string package = GetAllGendersDBPackageName;

            dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);

            proc = GetDBMethod(dal, proc, package);

            return proc;
        }

        protected virtual string GetAllGendersDBMethodName
        {
            get { return "GetAllGenders"; }
        }

        protected virtual string GetAllGendersDBPackageName
        {
            get { return "PCK_ENTITIES_ENTITY_GEN"; }
        }


        protected virtual IDataReader GetAllGendersDB(string companyDB)
        {
            IDataReader ret = null;
            try
            {
                string dbMethod = GetAllGendersDBMethod(companyDB);
                DbCommand dbCommand;

                dbCommand = GetStoredProcCommand(dal, dbMethod, DBNull.Value);
                ret = dal.ExecuteReader(dbCommand);


            }
            catch (Exception ex)
            {
                // Quick Start is configured so that the Propagate Policy will
                // log the exception and then recommend a rethrow.
                bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
                if (rethrow)
                {
                    throw;
                }
            }
            return ret;
        }
		

    //    #endregion
		
    //    #region Cache PLACE
    //    #endregion
	
	
        //#region Select PLACE Operations
        //
        //SELECT OPERATIONS PLACE
        //
        //
        //
        //
        public virtual PlaceList GetAllPlaces(string companyDB)
        {
            IDataReader reader = GetAllPlacesDB(companyDB);
            PlaceList list = new PlaceList();
            while(reader.Read())
            {
                try
                {
                    list.Add(new Place(reader, companyDB));
                }
                catch(Exception ex)
                {
                    // Quick Start is configured so that the Propagate Policy will
                    // log the exception and then recommend a rethrow.
                    bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
                    if (rethrow)
                    {
                        throw;
                        } 
                }
            } 
            reader.Close();
            return list;
        }
		
        //
        //
        //
        //public virtual PlaceList GetAllPlacesForInstitution(string companyDB, long placeInstitutionId)
        //{
        //    IDataReader reader = GetAllPlacesForInstitutionDB(companyDB, placeInstitutionId);
        //    PlaceList list = new PlaceList();
        //    while(reader.Read())
        //    {
        //        try
        //        {
        //            list.Add(new Place(reader, companyDB));
        //        }
        //        catch(Exception ex)
        //        {
        //            // Quick Start is configured so that the Propagate Policy will
        //            // log the exception and then recommend a rethrow.
        //            bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
        //            if (rethrow)
        //            {
        //                throw;
        //                } 
        //        }
        //    } 
        //    reader.Close();
        //    return list;
        //}
		
    //    //
    //    //
    //    //
    //    public virtual Place GetPlaceByCode(string companyDB, string placeCode)
    //    {
    //        IDataReader reader = GetPlaceByCodeDB(companyDB, placeCode);
    //        Place obj = null;
    //        if(reader.Read())
    //        {
    //            try
    //            {
    //                obj = new Place(reader, companyDB);
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                } 
    //            }
    //        } 
    //        reader.Close();

    //        return obj;
    //    }
		
		
        //
        // DB
        //
        protected virtual string GetAllPlacesDBMethod(string companyDB)
        {
            string proc = GetAllPlacesDBMethodName;
            string package = GetAllPlacesDBPackageName;
			
            dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
            proc = GetDBMethod(dal, proc, package);
			
            return proc;
        }
		
        protected virtual string GetAllPlacesDBMethodName
        {
            get { return "GetAllPlaces"; }
        }
		
        protected virtual string GetAllPlacesDBPackageName
        {
            get { return "PCK_ENTITIES_ENTITY_GEN"; }
        }

		
        protected virtual IDataReader GetAllPlacesDB(string companyDB)
        {
            IDataReader ret = null;
            try
            {
                string dbMethod = GetAllPlacesDBMethod(companyDB);
                DbCommand dbCommand;
                
                dbCommand = GetStoredProcCommand(dal, dbMethod, DBNull.Value);
                ret = dal.ExecuteReader(dbCommand);
                
                
            }
            catch(Exception ex)
            {
                // Quick Start is configured so that the Propagate Policy will
                // log the exception and then recommend a rethrow.
                bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
                if (rethrow)
                {
                    throw;
                } 
            }
            return ret;
        }
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetAllPlacesForInstitutionDBMethod(string companyDB)
    //    {
    //        string proc = GetAllPlacesForInstitutionDBMethodName;
    //        string package = GetAllPlacesForInstitutionDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetAllPlacesForInstitutionDBMethodName
    //    {
    //        get { return "GetAllPlacesForInstitution"; }
    //    }
		
    //    protected virtual string GetAllPlacesForInstitutionDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetAllPlacesForInstitutionDB(string companyDB, long placeInstitutionId)
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetAllPlacesForInstitutionDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, placeInstitutionId, DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetPlaceByCodeDBMethod(string companyDB)
    //    {
    //        string proc = GetPlaceByCodeDBMethodName;
    //        string package = GetPlaceByCodeDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetPlaceByCodeDBMethodName
    //    {
    //        get { return "GetPlaceByCode"; }
    //    }
		
    //    protected virtual string GetPlaceByCodeDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetPlaceByCodeDB(string companyDB, string placeCode)
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetPlaceByCodeDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, placeCode, DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		

    //    #endregion
		
    //    #region Cache APPLICATION
    //    #endregion
	
	
    //    #region Select APPLICATION Operations
    //    //
    //    //SELECT OPERATIONS APPLICATION
    //    //
    //    //
    //    //
    //    //
        public virtual ApplicationList GetAllApplications(string companyDB)
        {
            IDataReader reader = GetAllApplicationsDB(companyDB);
            ApplicationList list = new ApplicationList();
            while (reader.Read())
            {
                try
                {
                    list.Add(new Application(reader, companyDB));
                }
                catch (Exception ex)
                {
                    // Quick Start is configured so that the Propagate Policy will
                    // log the exception and then recommend a rethrow.
                    bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
                    if (rethrow)
                    {
                        throw;
                    }
                }
            }
            reader.Close();
            return list;
        }
		
    //    //
    //    //
    //    //
    //    public virtual Application GetApplicationByCode(string companyDB, string applicationCode)
    //    {
    //        IDataReader reader = GetApplicationByCodeDB(companyDB, applicationCode);
    //        Application obj = null;
    //        if(reader.Read())
    //        {
    //            try
    //            {
    //                obj = new Application(reader, companyDB);
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                } 
    //            }
    //        } 
    //        reader.Close();

    //        return obj;
    //    }


        //
        // DB
        //
        protected virtual string GetAllApplicationsDBMethod(string companyDB)
        {
            string proc = GetAllApplicationsDBMethodName;
            string package = GetAllApplicationsDBPackageName;

            dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);

            proc = GetDBMethod(dal, proc, package);

            return proc;
        }

        protected virtual string GetAllApplicationsDBMethodName
        {
            get { return "GetAllApplications"; }
        }

        protected virtual string GetAllApplicationsDBPackageName
        {
            get { return "PCK_ENTITIES_ENTITY_GEN"; }
        }


        protected virtual IDataReader GetAllApplicationsDB(string companyDB)
        {
            IDataReader ret = null;
            try
            {
                string dbMethod = GetAllApplicationsDBMethod(companyDB);
                DbCommand dbCommand;

                dbCommand = GetStoredProcCommand(dal, dbMethod, DBNull.Value);
                ret = dal.ExecuteReader(dbCommand);


            }
            catch (Exception ex)
            {
                // Quick Start is configured so that the Propagate Policy will
                // log the exception and then recommend a rethrow.
                bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
                if (rethrow)
                {
                    throw;
                }
            }
            return ret;
        }
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetApplicationByCodeDBMethod(string companyDB)
    //    {
    //        string proc = GetApplicationByCodeDBMethodName;
    //        string package = GetApplicationByCodeDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetApplicationByCodeDBMethodName
    //    {
    //        get { return "GetApplicationByCode"; }
    //    }
		
    //    protected virtual string GetApplicationByCodeDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetApplicationByCodeDB(string companyDB, string applicationCode)
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetApplicationByCodeDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, applicationCode, DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		

    //    #endregion
		
    //    #region Cache PATIENTTYPE
    //    #endregion
	
	
        #region Select PATIENTTYPE Operations
        //
        //SELECT OPERATIONS PATIENTTYPE
        //
        //
        //
        //
        public virtual PatientTypeList GetAllPatientTypes(string companyDB, string username)
        {
            IDataReader reader = GetAllPatientTypesDB(companyDB, username);
            PatientTypeList list = new PatientTypeList();
            while(reader.Read())
            {
                try
                {
                    list.Add(new PatientType(reader, companyDB));
                }
                catch(Exception ex)
                {
                    // Quick Start is configured so that the Propagate Policy will
                    // log the exception and then recommend a rethrow.
                    bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
                    if (rethrow)
                    {
                        throw;
                        } 
                }
            } 
            reader.Close();
            return list;
        }
		
		
        //
        // DB
        //
        protected virtual string GetAllPatientTypesDBMethod(string companyDB, string username)
        {
            string proc = GetAllPatientTypesDBMethodName;
            string package = GetAllPatientTypesDBPackageName;
			
            dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
            proc = GetDBMethod(dal, proc, package);
			
            return proc;
        }
		
        protected virtual string GetAllPatientTypesDBMethodName
        {
            get { return "getallpatienttypesbypermission"; } //"GetAllPatientTypes"
        }
		
        protected virtual string GetAllPatientTypesDBPackageName
        {
            get { return "PCK_ENTITIES_ENTITY_GEN"; }
        }


        protected virtual IDataReader GetAllPatientTypesDB(string companyDB, string username)
        {
            IDataReader ret = null;
            try
            {
                string dbMethod = GetAllPatientTypesDBMethod(companyDB, username);
                DbCommand dbCommand;

                dbCommand = GetStoredProcCommand(dal, dbMethod, username, DBNull.Value);
                ret = dal.ExecuteReader(dbCommand);
                
                
            }
            catch(Exception ex)
            {
                // Quick Start is configured so that the Propagate Policy will
                // log the exception and then recommend a rethrow.
                bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
                if (rethrow)
                {
                    throw;
                } 
            }
            return ret;
        }
		

        #endregion
		
    //    #region Cache REQUISITIONTYPE
    //    #endregion
	
	
    //    #region Select REQUISITIONTYPE Operations
    //    //
    //    //SELECT OPERATIONS REQUISITIONTYPE
    //    //
    //    //
    //    //
    //    //
    //    public virtual RequisitionTypeList GetAllRequisitionTypes(string companyDB)
    //    {
    //        IDataReader reader = GetAllRequisitionTypesDB(companyDB);
    //        RequisitionTypeList list = new RequisitionTypeList();
    //        while(reader.Read())
    //        {
    //            try
    //            {
    //                list.Add(new RequisitionType(reader, companyDB));
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                    } 
    //            }
    //        } 
    //        reader.Close();
    //        return list;
    //    }
		
    //    //
    //    //
    //    //
    //    public virtual RequisitionType GetRequisitionTypeById(string companyDB, long requisitionTypeId)
    //    {
    //        IDataReader reader = GetRequisitionTypeByIdDB(companyDB, requisitionTypeId);
    //        RequisitionType obj = null;
    //        if(reader.Read())
    //        {
    //            try
    //            {
    //                obj = new RequisitionType(reader, companyDB);
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                } 
    //            }
    //        } 
    //        reader.Close();

    //        return obj;
    //    }
		
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetAllRequisitionTypesDBMethod(string companyDB)
    //    {
    //        string proc = GetAllRequisitionTypesDBMethodName;
    //        string package = GetAllRequisitionTypesDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetAllRequisitionTypesDBMethodName
    //    {
    //        get { return "GetAllRequisitionTypes"; }
    //    }
		
    //    protected virtual string GetAllRequisitionTypesDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetAllRequisitionTypesDB(string companyDB)
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetAllRequisitionTypesDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetRequisitionTypeByIdDBMethod(string companyDB)
    //    {
    //        string proc = GetRequisitionTypeByIdDBMethodName;
    //        string package = GetRequisitionTypeByIdDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetRequisitionTypeByIdDBMethodName
    //    {
    //        get { return "GetRequisitionTypeById"; }
    //    }
		
    //    protected virtual string GetRequisitionTypeByIdDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetRequisitionTypeByIdDB(string companyDB, long requisitionTypeId)
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetRequisitionTypeByIdDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, requisitionTypeId, DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		

    //    #endregion
		
    //    #region Cache PERSHOSP
    //    #endregion
	
	
    //    #region Select PERSHOSP Operations
    //    //
    //    //SELECT OPERATIONS PERSHOSP
    //    //
    //    //
    //    //
    //    //
    //    public virtual PersHospList GetAllHospPersons(string companyDB)
    //    {
    //        IDataReader reader = GetAllHospPersonsDB(companyDB);
    //        PersHospList list = new PersHospList();
    //        while(reader.Read())
    //        {
    //            try
    //            {
    //                list.Add(new PersHosp(reader, companyDB));
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                    } 
    //            }
    //        } 
    //        reader.Close();
    //        return list;
    //    }
		
    //    //
    //    //
    //    //
    //    public virtual PersHosp GetHospPersonByEntId(string companyDB, long pessHospEntId)
    //    {
    //        IDataReader reader = GetHospPersonByEntIdDB(companyDB, pessHospEntId);
    //        PersHosp obj = null;
    //        if(reader.Read())
    //        {
    //            try
    //            {
    //                obj = new PersHosp(reader, companyDB);
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                } 
    //            }
    //        } 
    //        reader.Close();

    //        return obj;
    //    }
		
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetAllHospPersonsDBMethod(string companyDB)
    //    {
    //        string proc = GetAllHospPersonsDBMethodName;
    //        string package = GetAllHospPersonsDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetAllHospPersonsDBMethodName
    //    {
    //        get { return "GetAllHospPersons"; }
    //    }
		
    //    protected virtual string GetAllHospPersonsDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetAllHospPersonsDB(string companyDB)
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetAllHospPersonsDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetHospPersonByEntIdDBMethod(string companyDB)
    //    {
    //        string proc = GetHospPersonByEntIdDBMethodName;
    //        string package = GetHospPersonByEntIdDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetHospPersonByEntIdDBMethodName
    //    {
    //        get { return "GetHospPersonByEntId"; }
    //    }
		
    //    protected virtual string GetHospPersonByEntIdDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetHospPersonByEntIdDB(string companyDB, long pessHospEntId)
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetHospPersonByEntIdDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, pessHospEntId, DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		

    //    #endregion
		
    //    #region Cache MARITALSTATUS
    //    #endregion
	
	
    //    #region Select MARITALSTATUS Operations
    //    //
    //    //SELECT OPERATIONS MARITALSTATUS
    //    //
    //    //
    //    //
    //    //
    //    public virtual MaritalStatusList GetAllMaritalStates(string companyDB)
    //    {
    //        IDataReader reader = GetAllMaritalStatesDB(companyDB);
    //        MaritalStatusList list = new MaritalStatusList();
    //        while(reader.Read())
    //        {
    //            try
    //            {
    //                list.Add(new MaritalStatus(reader, companyDB));
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                    } 
    //            }
    //        } 
    //        reader.Close();
    //        return list;
    //    }
		
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetAllMaritalStatesDBMethod(string companyDB)
    //    {
    //        string proc = GetAllMaritalStatesDBMethodName;
    //        string package = GetAllMaritalStatesDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetAllMaritalStatesDBMethodName
    //    {
    //        get { return "GetAllMaritalStates"; }
    //    }
		
    //    protected virtual string GetAllMaritalStatesDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetAllMaritalStatesDB(string companyDB)
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetAllMaritalStatesDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		

    //    #endregion
		
    //    #region Cache LOCALPATIENT
    //    #endregion
	
	
    //    #region Select LOCALPATIENT Operations
    //    //
    //    //SELECT OPERATIONS LOCALPATIENT
    //    //
    //    //
    //    //
    //    //
    //    public virtual LocalPatientList GetLocalPatientsByEntityId(string companyDB, long locpatEntityId)
    //    {
    //        IDataReader reader = GetLocalPatientsByEntityIdDB(companyDB, locpatEntityId);
    //        LocalPatientList list = new LocalPatientList();
    //        while(reader.Read())
    //        {
    //            try
    //            {
    //                list.Add(new LocalPatient(reader, companyDB));
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                    } 
    //            }
    //        } 
    //        reader.Close();
    //        return list;
    //    }
		
    //    //
    //    //
    //    //
    //    public virtual LocalPatientList GetPatientIds(string companyDB, string patProcessNum , string patSnsNum , Nullable<DateTime> patBirthDate , string patId , string patType , string patName , string patSex , long? tEpisodio , string episodeId , Nullable<DateTime> epiDateBegin , Nullable<DateTime> epiDateEnd , string doc , string extId , long? docTypeId , long? appId , long? localId , long? instId , Nullable<DateTime> docDateBegin , Nullable<DateTime> docDateEnd , Nullable<DateTime> valDateBegin , Nullable<DateTime> valDateEnd , string searchType , string globalFilters , string docsSession , string servsSession , string userName , string userAnaRes )
    //    {
    //        IDataReader reader = GetPatientIdsDB(companyDB, patProcessNum , patSnsNum , patBirthDate , patId , patType , patName , patSex , tEpisodio , episodeId , epiDateBegin , epiDateEnd , doc , extId , docTypeId , appId , localId , instId , docDateBegin , docDateEnd , valDateBegin , valDateEnd , searchType , globalFilters , docsSession , servsSession , userName , userAnaRes );
    //        LocalPatientList list = new LocalPatientList();
    //        while(reader.Read())
    //        {
    //            try
    //            {
    //                list.Add(new LocalPatient(reader, companyDB));
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                    } 
    //            }
    //        } 
    //        reader.Close();
    //        return list;
    //    }
		
    //    //
    //    //
    //    //
    //    public virtual LocalPatientList GetPatientIdsByDocument(string companyDB, string docRef , long appId , long localId , long instId )
    //    {
    //        IDataReader reader = GetPatientIdsByDocumentDB(companyDB, docRef , appId , localId , instId );
    //        LocalPatientList list = new LocalPatientList();
    //        while(reader.Read())
    //        {
    //            try
    //            {
    //                list.Add(new LocalPatient(reader, companyDB));
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                    } 
    //            }
    //        } 
    //        reader.Close();
    //        return list;
    //    }
		
    //    //
    //    //
    //    //
    //    public virtual LocalPatientList GetPatientIdsByDocumentV2(string companyDB, string docRef , long docTypeId , long appId , long localId , long instId )
    //    {
    //        IDataReader reader = GetPatientIdsByDocumentV2DB(companyDB, docRef , docTypeId , appId , localId , instId );
    //        LocalPatientList list = new LocalPatientList();
    //        while(reader.Read())
    //        {
    //            try
    //            {
    //                list.Add(new LocalPatient(reader, companyDB));
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                    } 
    //            }
    //        } 
    //        reader.Close();
    //        return list;
    //    }
		
    //    //
    //    //
    //    //
    //    public virtual LocalPatientList GenericPatientIds(string companyDB, string patProcessNum , string patSnsNum , Nullable<DateTime> patBirthDate , string patPatId , string patType , string patName , string patSex , string tEpisodio , string episodeId , Nullable<DateTime> epiDateBegin , Nullable<DateTime> epiDateEnd , string doc , string extId , string docTypeId , string appId , string localId , string instId , Nullable<DateTime> docDateBegin , Nullable<DateTime> docDateEnd , Nullable<DateTime> valDateBegin , Nullable<DateTime> valDateEnd , string searchType , string globalFilters , string docsSession , string servsSession , string userName , string userAnaRes , string patID )
    //    {
    //        IDataReader reader = GenericPatientIdsDB(companyDB, patProcessNum , patSnsNum , patBirthDate , patPatId , patType , patName , patSex , tEpisodio , episodeId , epiDateBegin , epiDateEnd , doc , extId , docTypeId , appId , localId , instId , docDateBegin , docDateEnd , valDateBegin , valDateEnd , searchType , globalFilters , docsSession , servsSession , userName , userAnaRes , patID );
    //        LocalPatientList list = new LocalPatientList();
    //        while(reader.Read())
    //        {
    //            try
    //            {
    //                list.Add(new LocalPatient(reader, companyDB));
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                    } 
    //            }
    //        } 
    //        reader.Close();
    //        return list;
    //    }
		
    //    //
    //    //
    //    //
    //    public virtual LocalPatientList GetPatientBySamplesPatientIds(string companyDB, string appId , string localId , string instid , Nullable<DateTime> minDate , Nullable<DateTime> maxDate , string service )
    //    {
    //        IDataReader reader = GetPatientBySamplesPatientIdsDB(companyDB, appId , localId , instid , minDate , maxDate , service );
    //        LocalPatientList list = new LocalPatientList();
    //        while(reader.Read())
    //        {
    //            try
    //            {
    //                list.Add(new LocalPatient(reader, companyDB));
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                    } 
    //            }
    //        } 
    //        reader.Close();
    //        return list;
    //    }
		
    //    //
    //    //
    //    //
    //    public virtual LocalPatientList GetPatientByIdIds(string companyDB, string entId )
    //    {
    //        IDataReader reader = GetPatientByIdIdsDB(companyDB, entId );
    //        LocalPatientList list = new LocalPatientList();
    //        while(reader.Read())
    //        {
    //            try
    //            {
    //                list.Add(new LocalPatient(reader, companyDB));
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                    } 
    //            }
    //        } 
    //        reader.Close();
    //        return list;
    //    }
		
    //    //
    //    //
    //    //
    //    public virtual LocalPatientList GetPatientIdsByRequest(string companyDB, long? requisitionId , long? elementId )
    //    {
    //        IDataReader reader = GetPatientIdsByRequestDB(companyDB, requisitionId , elementId );
    //        LocalPatientList list = new LocalPatientList();
    //        while(reader.Read())
    //        {
    //            try
    //            {
    //                list.Add(new LocalPatient(reader, companyDB));
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                    } 
    //            }
    //        } 
    //        reader.Close();
    //        return list;
    //    }
		
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetLocalPatientsByEntityIdDBMethod(string companyDB)
    //    {
    //        string proc = GetLocalPatientsByEntityIdDBMethodName;
    //        string package = GetLocalPatientsByEntityIdDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetLocalPatientsByEntityIdDBMethodName
    //    {
    //        get { return "GetLocalPatientsByEntityId"; }
    //    }
		
    //    protected virtual string GetLocalPatientsByEntityIdDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetLocalPatientsByEntityIdDB(string companyDB, long locpatEntityId)
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetLocalPatientsByEntityIdDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, locpatEntityId, DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetPatientIdsDBMethod(string companyDB)
    //    {
    //        string proc = GetPatientIdsDBMethodName;
    //        string package = GetPatientIdsDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetPatientIdsDBMethodName
    //    {
    //        get { return "GetPatientIds"; }
    //    }
		
    //    protected virtual string GetPatientIdsDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetPatientIdsDB(string companyDB, string patProcessNum , string patSnsNum , Nullable<DateTime> patBirthDate , string patId , string patType , string patName , string patSex , long? tEpisodio , string episodeId , Nullable<DateTime> epiDateBegin , Nullable<DateTime> epiDateEnd , string doc , string extId , long? docTypeId , long? appId , long? localId , long? instId , Nullable<DateTime> docDateBegin , Nullable<DateTime> docDateEnd , Nullable<DateTime> valDateBegin , Nullable<DateTime> valDateEnd , string searchType , string globalFilters , string docsSession , string servsSession , string userName , string userAnaRes )
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetPatientIdsDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, patProcessNum , patSnsNum , patBirthDate , patId , patType , patName , patSex , tEpisodio , episodeId , epiDateBegin , epiDateEnd , doc , extId , docTypeId , appId , localId , instId , docDateBegin , docDateEnd , valDateBegin , valDateEnd , searchType , globalFilters , docsSession , servsSession , userName , userAnaRes , DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetPatientIdsByDocumentDBMethod(string companyDB)
    //    {
    //        string proc = GetPatientIdsByDocumentDBMethodName;
    //        string package = GetPatientIdsByDocumentDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetPatientIdsByDocumentDBMethodName
    //    {
    //        get { return "GetPatientIdsByDocument"; }
    //    }
		
    //    protected virtual string GetPatientIdsByDocumentDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetPatientIdsByDocumentDB(string companyDB, string docRef , long appId , long localId , long instId )
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetPatientIdsByDocumentDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, docRef , appId , localId , instId , DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetPatientIdsByDocumentV2DBMethod(string companyDB)
    //    {
    //        string proc = GetPatientIdsByDocumentV2DBMethodName;
    //        string package = GetPatientIdsByDocumentV2DBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetPatientIdsByDocumentV2DBMethodName
    //    {
    //        get { return "GetPatientIdsByDocumentV2"; }
    //    }
		
    //    protected virtual string GetPatientIdsByDocumentV2DBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetPatientIdsByDocumentV2DB(string companyDB, string docRef , long docTypeId , long appId , long localId , long instId )
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetPatientIdsByDocumentV2DBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, docRef , docTypeId , appId , localId , instId , DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GenericPatientIdsDBMethod(string companyDB)
    //    {
    //        string proc = GenericPatientIdsDBMethodName;
    //        string package = GenericPatientIdsDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GenericPatientIdsDBMethodName
    //    {
    //        get { return "GenericPatientIds"; }
    //    }
		
    //    protected virtual string GenericPatientIdsDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GenericPatientIdsDB(string companyDB, string patProcessNum , string patSnsNum , Nullable<DateTime> patBirthDate , string patPatId , string patType , string patName , string patSex , string tEpisodio , string episodeId , Nullable<DateTime> epiDateBegin , Nullable<DateTime> epiDateEnd , string doc , string extId , string docTypeId , string appId , string localId , string instId , Nullable<DateTime> docDateBegin , Nullable<DateTime> docDateEnd , Nullable<DateTime> valDateBegin , Nullable<DateTime> valDateEnd , string searchType , string globalFilters , string docsSession , string servsSession , string userName , string userAnaRes , string patID )
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GenericPatientIdsDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, patProcessNum , patSnsNum , patBirthDate , patPatId , patType , patName , patSex , tEpisodio , episodeId , epiDateBegin , epiDateEnd , doc , extId , docTypeId , appId , localId , instId , docDateBegin , docDateEnd , valDateBegin , valDateEnd , searchType , globalFilters , docsSession , servsSession , userName , userAnaRes , patID , DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetPatientBySamplesPatientIdsDBMethod(string companyDB)
    //    {
    //        string proc = GetPatientBySamplesPatientIdsDBMethodName;
    //        string package = GetPatientBySamplesPatientIdsDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetPatientBySamplesPatientIdsDBMethodName
    //    {
    //        get { return "GetPatientBySamplesPatientIds"; }
    //    }
		
    //    protected virtual string GetPatientBySamplesPatientIdsDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetPatientBySamplesPatientIdsDB(string companyDB, string appId , string localId , string instid , Nullable<DateTime> minDate , Nullable<DateTime> maxDate , string service )
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetPatientBySamplesPatientIdsDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, appId , localId , instid , minDate , maxDate , service , DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetPatientByIdIdsDBMethod(string companyDB)
    //    {
    //        string proc = GetPatientByIdIdsDBMethodName;
    //        string package = GetPatientByIdIdsDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetPatientByIdIdsDBMethodName
    //    {
    //        get { return "GetPatientByIdIds"; }
    //    }
		
    //    protected virtual string GetPatientByIdIdsDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetPatientByIdIdsDB(string companyDB, string entId )
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetPatientByIdIdsDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, entId , DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetPatientIdsByRequestDBMethod(string companyDB)
    //    {
    //        string proc = GetPatientIdsByRequestDBMethodName;
    //        string package = GetPatientIdsByRequestDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetPatientIdsByRequestDBMethodName
    //    {
    //        get { return "GetPatientIdsByRequest"; }
    //    }
		
    //    protected virtual string GetPatientIdsByRequestDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetPatientIdsByRequestDB(string companyDB, long? requisitionId , long? elementId )
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetPatientIdsByRequestDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, requisitionId , elementId , DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		

    //    #endregion
		
    //    #region Cache RECIPIENT
    //    #endregion
	
	
    //    #region Cache RECIPIENTTYPE
    //    #endregion
	
	
    //    #region Cache TUBE
    //    #endregion
	
	
    //    #region Cache ALERTTYPE
    //    #endregion


        #region Select ALERTTYPE Operations
        //
        //SELECT OPERATIONS ALERTTYPE
        //
        //
        //
        //
        public virtual AlertTypeList GetAllAlertTypes(string companyDB)
        {
            IDataReader reader = GetAllAlertTypesDB(companyDB);
            AlertTypeList list = new AlertTypeList();
            while (reader.Read())
            {
                try
                {
                    list.Add(new AlertType(reader, companyDB));
                }
                catch (Exception ex)
                {
                    // Quick Start is configured so that the Propagate Policy will
                    // log the exception and then recommend a rethrow.
                    bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
                    if (rethrow)
                    {
                        throw;
                    }
                }
            }
            reader.Close();
            return list;
        }


        //
        // DB
        //
        protected virtual string GetAllAlertTypesDBMethod(string companyDB)
        {
            string proc = GetAllAlertTypesDBMethodName;
            string package = GetAllAlertTypesDBPackageName;

            dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);

            proc = GetDBMethod(dal, proc, package);

            return proc;
        }

        protected virtual string GetAllAlertTypesDBMethodName
        {
            get { return "GetAllAlertTypes"; }
        }

        protected virtual string GetAllAlertTypesDBPackageName
        {
            get { return "PCK_ENTITIES_ENTITY_GEN"; }
        }


        protected virtual IDataReader GetAllAlertTypesDB(string companyDB)
        {
            IDataReader ret = null;
            try
            {
                string dbMethod = GetAllAlertTypesDBMethod(companyDB);
                DbCommand dbCommand;

                dbCommand = GetStoredProcCommand(dal, dbMethod, DBNull.Value);
                ret = dal.ExecuteReader(dbCommand);


            }
            catch (Exception ex)
            {
                // Quick Start is configured so that the Propagate Policy will
                // log the exception and then recommend a rethrow.
                bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
                if (rethrow)
                {
                    throw;
                }
            }
            return ret;
        }


        #endregion
		
    //    #region Cache EXECPLACE
    //    #endregion
	
	
    //    #region Select EXECPLACE Operations
    //    //
    //    //SELECT OPERATIONS EXECPLACE
    //    //
    //    //
    //    //
    //    //
    //    public virtual ExecPlaceList GetAllExecutionPlaces(string companyDB)
    //    {
    //        IDataReader reader = GetAllExecutionPlacesDB(companyDB);
    //        ExecPlaceList list = new ExecPlaceList();
    //        while(reader.Read())
    //        {
    //            try
    //            {
    //                list.Add(new ExecPlace(reader, companyDB));
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                    } 
    //            }
    //        } 
    //        reader.Close();
    //        return list;
    //    }
		
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetAllExecutionPlacesDBMethod(string companyDB)
    //    {
    //        string proc = GetAllExecutionPlacesDBMethodName;
    //        string package = GetAllExecutionPlacesDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetAllExecutionPlacesDBMethodName
    //    {
    //        get { return "GetAllExecutionPlaces"; }
    //    }
		
    //    protected virtual string GetAllExecutionPlacesDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetAllExecutionPlacesDB(string companyDB)
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetAllExecutionPlacesDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		

    //    #endregion
		
    //    #region Cache ERCONFIGURATION
    //    #endregion


        #region Select ERCONFIGURATION Operations
        

        public virtual ERConfigurationList GetConfigurationsByKey(string companyDB, string erConfigKey)
        {
            IDataReader reader = GetConfigurationsByKeyDB(companyDB, erConfigKey);
            ERConfigurationList list = new ERConfigurationList();
            while (reader.Read())
            {
                try
                {
                    list.Add(new ERConfiguration(reader, companyDB));
                }
                catch (Exception ex)
                {
                    // Quick Start is configured so that the Propagate Policy will
                    // log the exception and then recommend a rethrow.
                    bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
                    if (rethrow)
                    {
                        throw;
                    }
                }
            }
            reader.Close();
            return list;
        }

        //
        //
        //
        public virtual ERConfigurationList GetConfigurationByAreaAndKey(string companyDB, long erConfigInstId, long erConfigPlaceId, long erConfigAppId, long erConfigDocTypeId, string erConfigKey)
        {
            IDataReader reader = GetConfigurationByAreaAndKeyDB(companyDB, erConfigInstId, erConfigPlaceId, erConfigAppId, erConfigDocTypeId, erConfigKey);
            ERConfigurationList list = new ERConfigurationList();
            while (reader.Read())
            {
                try
                {
                    list.Add(new ERConfiguration(reader, companyDB));
                }
                catch (Exception ex)
                {
                    // Quick Start is configured so that the Propagate Policy will
                    // log the exception and then recommend a rethrow.
                    bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
                    if (rethrow)
                    {
                        throw;
                    }
                }
            }
            reader.Close();
            return list;
        }

        //
        //
        //
        public virtual ERConfigurationList GetConfigurationByScope(string companyDB, long? Institution, long? Place, long? Application, long? DocType, string Scope)
        {
            IDataReader reader = GetConfigurationByScopeDB(companyDB, Institution, Place, Application, DocType, Scope);
            ERConfigurationList list = new ERConfigurationList();
            while (reader.Read())
            {
                try
                {
                    list.Add(new ERConfiguration(reader, companyDB));
                }
                catch (Exception ex)
                {
                    // Quick Start is configured so that the Propagate Policy will
                    // log the exception and then recommend a rethrow.
                    bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
                    if (rethrow)
                    {
                        throw;
                    }
                }
            }
            reader.Close();
            return list;
        }
		
    //    //
    //    //
    //    //
        public virtual ERConfiguration GetConfigurationByScopeKey(string companyDB, string erConfigKey, string Scope)
        {
            IDataReader reader = GetConfigurationByScopeKeyDB(companyDB, erConfigKey, Scope);
            ERConfiguration obj = null;
            if (reader.Read())
            {
                try
                {
                    obj = new ERConfiguration(reader, companyDB);
                }
                catch (Exception ex)
                {
                    // Quick Start is configured so that the Propagate Policy will
                    // log the exception and then recommend a rethrow.
                    bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
                    if (rethrow)
                    {
                        throw;
                    }
                }
            }
            reader.Close();

            return obj;
        }


        //
        // DB
        //
        protected virtual string GetConfigurationsByKeyDBMethod(string companyDB)
        {
            string proc = GetConfigurationsByKeyDBMethodName;
            string package = GetConfigurationsByKeyDBPackageName;

            dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);

            proc = GetDBMethod(dal, proc, package);

            return proc;
        }

        protected virtual string GetConfigurationsByKeyDBMethodName
        {
            get { return "GetConfigurationsByKey"; }
        }

        protected virtual string GetConfigurationsByKeyDBPackageName
        {
            get { return "PCK_ENTITIES_ENTITY_GEN"; }
        }


        protected virtual IDataReader GetConfigurationsByKeyDB(string companyDB, string erConfigKey)
        {
            IDataReader ret = null;
            try
            {
                string dbMethod = GetConfigurationsByKeyDBMethod(companyDB);
                DbCommand dbCommand;

                dbCommand = GetStoredProcCommand(dal, dbMethod, erConfigKey, DBNull.Value);
                ret = dal.ExecuteReader(dbCommand);


            }
            catch (Exception ex)
            {
                // Quick Start is configured so that the Propagate Policy will
                // log the exception and then recommend a rethrow.
                bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
                if (rethrow)
                {
                    throw;
                }
            }
            return ret;
        }

        //
        // DB
        //
        protected virtual string GetConfigurationByAreaAndKeyDBMethod(string companyDB)
        {
            string proc = GetConfigurationByAreaAndKeyDBMethodName;
            string package = GetConfigurationByAreaAndKeyDBPackageName;

            dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);

            proc = GetDBMethod(dal, proc, package);

            return proc;
        }

        protected virtual string GetConfigurationByAreaAndKeyDBMethodName
        {
            get { return "GetConfigurationByAreaAndKey"; }
        }

        protected virtual string GetConfigurationByAreaAndKeyDBPackageName
        {
            get { return "PCK_ENTITIES_ENTITY_GEN"; }
        }


        protected virtual IDataReader GetConfigurationByAreaAndKeyDB(string companyDB, long erConfigInstId, long erConfigPlaceId, long erConfigAppId, long erConfigDocTypeId, string erConfigKey)
        {
            IDataReader ret = null;
            try
            {
                string dbMethod = GetConfigurationByAreaAndKeyDBMethod(companyDB);
                DbCommand dbCommand;

                dbCommand = GetStoredProcCommand(dal, dbMethod, erConfigInstId, erConfigPlaceId, erConfigAppId, erConfigDocTypeId, erConfigKey, DBNull.Value);
                ret = dal.ExecuteReader(dbCommand);


            }
            catch (Exception ex)
            {
                // Quick Start is configured so that the Propagate Policy will
                // log the exception and then recommend a rethrow.
                bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
                if (rethrow)
                {
                    throw;
                }
            }
            return ret;
        }

        //
        // DB
        //
        protected virtual string GetConfigurationByScopeDBMethod(string companyDB)
        {
            string proc = GetConfigurationByScopeDBMethodName;
            string package = GetConfigurationByScopeDBPackageName;

            dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);

            proc = GetDBMethod(dal, proc, package);

            return proc;
        }

        protected virtual string GetConfigurationByScopeDBMethodName
        {
            get { return "GetConfigurationByScope"; }
        }

        protected virtual string GetConfigurationByScopeDBPackageName
        {
            get { return "PCK_ENTITIES_ENTITY_GEN"; }
        }


        protected virtual IDataReader GetConfigurationByScopeDB(string companyDB, long? Institution, long? Place, long? Application, long? DocType, string Scope)
        {
            IDataReader ret = null;
            try
            {
                string dbMethod = GetConfigurationByScopeDBMethod(companyDB);
                DbCommand dbCommand;

                dbCommand = GetStoredProcCommand(dal, dbMethod, Institution, Place, Application, DocType, Scope, DBNull.Value);
                ret = dal.ExecuteReader(dbCommand);


            }
            catch (Exception ex)
            {
                // Quick Start is configured so that the Propagate Policy will
                // log the exception and then recommend a rethrow.
                bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
                if (rethrow)
                {
                    throw;
                }
            }
            return ret;
        }

        //
        // DB
        //
        protected virtual string GetConfigurationByScopeKeyDBMethod(string companyDB)
        {
            string proc = GetConfigurationByScopeKeyDBMethodName;
            string package = GetConfigurationByScopeKeyDBPackageName;

            dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);

            proc = GetDBMethod(dal, proc, package);

            return proc;
        }

        protected virtual string GetConfigurationByScopeKeyDBMethodName
        {
            get { return "GetConfigurationByScopeKey"; }
        }

        protected virtual string GetConfigurationByScopeKeyDBPackageName
        {
            get { return "PCK_ENTITIES_ENTITY_GEN"; }
        }


        protected virtual IDataReader GetConfigurationByScopeKeyDB(string companyDB, string erConfigKey, string Scope)
        {
            IDataReader ret = null;
            try
            {
                string dbMethod = GetConfigurationByScopeKeyDBMethod(companyDB);
                DbCommand dbCommand;

                dbCommand = GetStoredProcCommand(dal, dbMethod, erConfigKey, Scope, DBNull.Value);
                ret = dal.ExecuteReader(dbCommand);


            }
            catch (Exception ex)
            {
                // Quick Start is configured so that the Propagate Policy will
                // log the exception and then recommend a rethrow.
                bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
                if (rethrow)
                {
                    throw;
                }
            }
            return ret;
        }
		

        #endregion
		
    //    #region Cache EXTRACTPLACE
    //    #endregion
	
	
    //    #region Select EXTRACTPLACE Operations
    //    //
    //    //SELECT OPERATIONS EXTRACTPLACE
    //    //
    //    //
    //    //
    //    //
    //    public virtual ExtractPlaceList GetAllExtractionPlaces(string companyDB)
    //    {
    //        IDataReader reader = GetAllExtractionPlacesDB(companyDB);
    //        ExtractPlaceList list = new ExtractPlaceList();
    //        while(reader.Read())
    //        {
    //            try
    //            {
    //                list.Add(new ExtractPlace(reader, companyDB));
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                    } 
    //            }
    //        } 
    //        reader.Close();
    //        return list;
    //    }
		
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetAllExtractionPlacesDBMethod(string companyDB)
    //    {
    //        string proc = GetAllExtractionPlacesDBMethodName;
    //        string package = GetAllExtractionPlacesDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetAllExtractionPlacesDBMethodName
    //    {
    //        get { return "GetAllExtractionPlaces"; }
    //    }
		
    //    protected virtual string GetAllExtractionPlacesDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetAllExtractionPlacesDB(string companyDB)
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetAllExtractionPlacesDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		

    //    #endregion
		
    //    #region Cache TERAPEUTIC
    //    #endregion
	
	
    //    #region Select TERAPEUTIC Operations
    //    //
    //    //SELECT OPERATIONS TERAPEUTIC
    //    //
    //    //
    //    //
    //    //
    //    public virtual TerapeuticList GetAllTerapeutics(string companyDB)
    //    {
    //        IDataReader reader = GetAllTerapeuticsDB(companyDB);
    //        TerapeuticList list = new TerapeuticList();
    //        while(reader.Read())
    //        {
    //            try
    //            {
    //                list.Add(new Terapeutic(reader, companyDB));
    //            }
    //            catch(Exception ex)
    //            {
    //                // Quick Start is configured so that the Propagate Policy will
    //                // log the exception and then recommend a rethrow.
    //                bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
    //                if (rethrow)
    //                {
    //                    throw;
    //                    } 
    //            }
    //        } 
    //        reader.Close();
    //        return list;
    //    }
		
		
    //    //
    //    // DB
    //    //
    //    protected virtual string GetAllTerapeuticsDBMethod(string companyDB)
    //    {
    //        string proc = GetAllTerapeuticsDBMethodName;
    //        string package = GetAllTerapeuticsDBPackageName;
			
    //        dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);
            
    //        proc = GetDBMethod(dal, proc, package);
			
    //        return proc;
    //    }
		
    //    protected virtual string GetAllTerapeuticsDBMethodName
    //    {
    //        get { return "GetAllTerapeutics"; }
    //    }
		
    //    protected virtual string GetAllTerapeuticsDBPackageName
    //    {
    //        get { return "PCK_ENTITIES_ENTITY_GEN"; }
    //    }

		
    //    protected virtual IDataReader GetAllTerapeuticsDB(string companyDB)
    //    {
    //        IDataReader ret = null;
    //        try
    //        {
    //            string dbMethod = GetAllTerapeuticsDBMethod(companyDB);
    //            DbCommand dbCommand;
                
    //            dbCommand = GetStoredProcCommand(dal, dbMethod, DBNull.Value);
    //            ret = dal.ExecuteReader(dbCommand);
                
                
    //        }
    //        catch(Exception ex)
    //        {
    //            // Quick Start is configured so that the Propagate Policy will
    //            // log the exception and then recommend a rethrow.
    //            bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
    //            if (rethrow)
    //            {
    //                throw;
    //            } 
    //        }
    //        return ret;
    //    }
		

    //    #endregion
		
    //    #region Cache EXTERNALPATIENT
    //    #endregion


        #region Select EXTERNALPATIENT Operations
        //
        //SELECT OPERATIONS EXTERNALPATIENT
        //
        //
        //
        //
        public virtual ExternalPatientList GetPatientsFromExtProvider(string companyDB, string patPatient, string patName, Nullable<DateTime> patBirthDate, string patSNS, string patProcNum)
        {
            IDataReader reader = GetPatientsFromExtProviderDB(companyDB, patPatient, patName, patBirthDate, patSNS, patProcNum);
            ExternalPatientList list = new ExternalPatientList();
            while (reader.Read())
            {
                try
                {
                    list.Add(new ExternalPatient(reader, companyDB));
                }
                catch (Exception ex)
                {
                    // Quick Start is configured so that the Propagate Policy will
                    // log the exception and then recommend a rethrow.
                    bool rethrow = ExceptionPolicy.HandleException(ex, "Business Entities Exception Policy");
                    if (rethrow)
                    {
                        throw;
                    }
                }
            }
            reader.Close();
            return list;
        }


        //
        // DB
        //
        protected virtual string GetPatientsFromExtProviderDBMethod(string companyDB)
        {
            string proc = GetPatientsFromExtProviderDBMethodName;
            string package = GetPatientsFromExtProviderDBPackageName;

            dal = CPCHS.Common.Database.Database.GetDatabase("EntitiesWCF", companyDB);

            proc = GetDBMethod(dal, proc, package);

            return proc;
        }

        protected virtual string GetPatientsFromExtProviderDBMethodName
        {
            get { return "GetPatientsFromExtProvider"; }
        }

        protected virtual string GetPatientsFromExtProviderDBPackageName
        {
            get { return "PCK_ENTITIES_ENTITY_GEN"; }
        }


        protected virtual IDataReader GetPatientsFromExtProviderDB(string companyDB, string patPatient, string patName, Nullable<DateTime> patBirthDate, string patSNS, string patProcNum)
        {
            IDataReader ret = null;
            try
            {
                string dbMethod = GetPatientsFromExtProviderDBMethod(companyDB);
                DbCommand dbCommand;

                dbCommand = GetStoredProcCommand(dal, dbMethod, patPatient, patName, patBirthDate, patSNS, patProcNum, DBNull.Value);
                ret = dal.ExecuteReader(dbCommand);


            }
            catch (Exception ex)
            {
                // Quick Start is configured so that the Propagate Policy will
                // log the exception and then recommend a rethrow.
                bool rethrow = ExceptionPolicy.HandleException(ex, "Database Exception Policy");
                if (rethrow)
                {
                    throw;
                }
            }
            return ret;
        }


        #endregion
		
    
    //#endregion
    
    //#region OBJECTS OPERATIONS
    
    //#endregion
	
    }
}


