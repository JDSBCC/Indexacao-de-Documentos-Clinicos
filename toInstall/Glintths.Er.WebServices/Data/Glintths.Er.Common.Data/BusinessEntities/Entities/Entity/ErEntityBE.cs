using System;
using System.Data;
using System.Text;
using System.Xml;
using System.Xml.Serialization;
using System.IO;

using Microsoft.Practices.EnterpriseLibrary.Logging;

using CPCHS.Common.BusinessEntities;
using Cpchs.Eresults.Common.WCF.BusinessEntities.Generated;
	
namespace Cpchs.Eresults.Common.WCF.BusinessEntities
{
    /// <summary>
    /// Date Created: quinta-feira, 9 de Julho de 2009
    /// Created By: Generated by CodeSmith
	/// Template Created By: CPCHS psilva, 2005
    /// </summary>
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly"), System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1705:LongAcronymsShouldBePascalCased"), System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707:IdentifiersShouldNotContainUnderscores"), Serializable]
    public class ErEntity : ErEntity_GEN
	{
        public string Role { get; set; }
        public long SampleId { get; set; }
        public long SampleVersion { get; set; }
        public long TubeId { get; set; }
        public string EntType { get; set; }

        /// <summary>
        /// Initialize an new empty ErEntity object.
        /// </summary>
        public ErEntity() : base()
        {
        }
		
		/// <summary>
        /// Initialize an new empty ErEntity object.
        /// </summary>
        public ErEntity(IDataReader reader, string companyDB) : base(reader, companyDB)
        {
            for (int i = 0; i < reader.FieldCount; i++)
            {
                switch (reader.GetName(i).ToUpper(System.Globalization.CultureInfo.CurrentCulture))
                {
                    case "ENTROLE":
                        if (!reader.IsDBNull(i)) this.Role = reader.GetString(i);
                        break;
                    case "SAMPLEID":
                        if (!reader.IsDBNull(i)) this.SampleId = reader.GetInt64(i);
                        break;
                    case "TUBEID":
                        if (!reader.IsDBNull(i)) this.TubeId = reader.GetInt64(i);
                        break;
                    case "SAMPLEVERSION":
                        if (!reader.IsDBNull(i)) this.SampleVersion = reader.GetInt64(i);
                        break;
                    case "ENTTYPE":
                        if (!reader.IsDBNull(i)) this.EntType = reader.GetString(i);
                        break;
                }
            }
        }
		
        /// <summary>
        /// Initialize a new  ErEntity object with the given parameters.
        /// </summary>
        public  ErEntity(long entId, string entName, string entSocialNum, string entAddress, string entCity, string entPostalCode, string entPhone1, string entPhone2, string entFax) : base(entId, entName, entSocialNum, entAddress, entCity, entPostalCode, entPhone1, entPhone2, entFax)
        {
        }
		
        public ErEntity(long entId) : base(entId)
        {
			
        }
	}
}


