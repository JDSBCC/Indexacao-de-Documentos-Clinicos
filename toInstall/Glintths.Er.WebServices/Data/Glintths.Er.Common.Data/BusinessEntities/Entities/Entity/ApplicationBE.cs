using System;
using System.Data;
using System.Text;
using System.Xml;
using System.Xml.Serialization;
using System.IO;

using Microsoft.Practices.EnterpriseLibrary.Logging;

using CPCHS.Common.BusinessEntities;
using Cpchs.Eresults.Common.WCF.BusinessEntities.Generated;
	
namespace Cpchs.Eresults.Common.WCF.BusinessEntities
{
    /// <summary>
    /// Date Created: segunda-feira, 6 de Outubro de 2008
    /// Created By: Generated by CodeSmith
	/// Template Created By: CPCHS psilva, 2005
    /// </summary>
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly"), System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1705:LongAcronymsShouldBePascalCased"), System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707:IdentifiersShouldNotContainUnderscores"), Serializable]
    public class Application : Application_GEN
	{
        public long ApplicationInstId { get; set; }
        public long ApplicationPlaceId { get; set; }
		
        /// <summary>
        /// Initialize an new empty Application object.
        /// </summary>
        public Application() : base()
        {
        }
		
		/// <summary>
        /// Initialize an new empty Application object.
        /// </summary>
        public Application(IDataReader reader, string companyDB) : base(reader, companyDB)
        {
            for (int i = 0; i < reader.FieldCount; i++)
            {
                switch (reader.GetName(i).ToUpper(System.Globalization.CultureInfo.CurrentCulture))
                {
                    case "APPLICATIONINSTID":
                        if (!reader.IsDBNull(i)) this.ApplicationInstId = reader.GetInt64(i);
                        break;
                    case "APPLICATIONPLACEID":
                        if (!reader.IsDBNull(i)) this.ApplicationPlaceId = reader.GetInt64(i);
                        break;
                }
            }
        }
		
        /// <summary>
        /// Initialize a new  Application object with the given parameters.
        /// </summary>
        public Application(long applicationInstId, long applicationPlaceId, long applicationId, string applicationCode, string applicationAcronym, string applicationDescription)
            : base(applicationId, applicationCode, applicationAcronym, applicationDescription)
        {
            this.ApplicationInstId = applicationInstId;
            this.ApplicationPlaceId = applicationPlaceId;
        }
		
        public Application(long applicationId) : base(applicationId)
        {
			
        }
	}
}


