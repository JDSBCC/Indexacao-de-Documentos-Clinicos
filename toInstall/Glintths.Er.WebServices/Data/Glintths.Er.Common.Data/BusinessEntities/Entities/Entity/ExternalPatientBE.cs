using System;
using System.Data;
using System.Text;
using System.Xml;
using System.Xml.Serialization;
using System.IO;
using Microsoft.Practices.EnterpriseLibrary.Logging;
using CPCHS.Common.BusinessEntities;
using Cpchs.Eresults.Common.WCF.BusinessEntities.Generated;
using System.Runtime.Serialization;
	
namespace Cpchs.Eresults.Common.WCF.BusinessEntities
{
    /// <summary>
    /// Date Created: ter?a-feira, 20 de Julho de 2010
    /// Created By: Generated by CodeSmith
	/// Template Created By: CPCHS psilva, 2005
    /// </summary>
    [DataContract]
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly"), System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1705:LongAcronymsShouldBePascalCased"), System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707:IdentifiersShouldNotContainUnderscores"), Serializable]
    public class ExternalPatient : ExternalPatient_GEN
	{
        /// <summary>
        /// Initialize an new empty ExternalPatient object.
        /// </summary>
        public ExternalPatient() : base()
        {
        }
		
		/// <summary>
        /// Initialize an new empty ExternalPatient object.
        /// </summary>
        public ExternalPatient(IDataReader reader, string companyDB) : base(reader, companyDB)
        {
        }
		
        /// <summary>
        /// Initialize a new  ExternalPatient object with the given parameters.
        /// </summary>
        public  ExternalPatient(string patPatientType, string patPatient, string patName, DateTime? patBirthDate, string patAddress, string patCity, string patPostalCode, string patPhone, string patPhone2, string patSex, string patBI, string patSNS, string patNBenef, string patSocialNum, string patCivilState, string patEmail, string patUniqueId, string patProcNum) : base(patPatientType, patPatient, patName, patBirthDate, patAddress, patCity, patPostalCode, patPhone, patPhone2, patSex, patBI, patSNS, patNBenef, patSocialNum, patCivilState, patEmail, patUniqueId, patProcNum)
        {
        }
		
        public ExternalPatient(string patPatientType, string patPatient) : base(patPatientType, patPatient)
        {
			
        }
	}
}


