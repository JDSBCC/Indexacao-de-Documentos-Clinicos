using System;
using System.Data;
using System.Text;
using System.Xml;
using System.Xml.Serialization;
using System.IO;
using Microsoft.Practices.EnterpriseLibrary.Logging;
using CPCHS.Common.BusinessEntities;
using Glintths.Er.Common.BusinessEntities.Generated;
using System.Runtime.Serialization;
	
namespace Glintths.Er.Common.BusinessEntities
{
    /// <summary>
    /// Date Created: quarta-feira, 25 de Agosto de 2010
    /// Created By: Generated by CodeSmith
	/// Template Created By: CPCHS psilva, 2005
    /// </summary>
    [DataContract]
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly"), System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1705:LongAcronymsShouldBePascalCased"), System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707:IdentifiersShouldNotContainUnderscores"), Serializable]
    public class HospitalStaff : HospitalStaff_GEN
	{

        private string hospStaffId = string.Empty;

        public string HospStaffId
        {
            get { return hospStaffId; }
            set { hospStaffId = value; }
        }

        private string hospStaffUsername = string.Empty;

        public string HospStaffUsername
        {
            get { return this.hospStaffUsername; }
            set
            {
                if (this.hospStaffUsername != value)
                {
                    this.hospStaffUsername = value;
                }
            }
        }

        /// <summary>
        /// Initialize an new empty HospitalStaff object.
        /// </summary>
        public HospitalStaff() : base()
        {
        }
		
		/// <summary>
        /// Initialize an new empty HospitalStaff object.
        /// </summary>
        public HospitalStaff(IDataReader reader, string companyDB) : base(reader, companyDB)
        {
            if (reader != null && !reader.IsClosed)
            {
                for (int i = 0; i < reader.FieldCount; i++)
                {
                    switch (reader.GetName(i).ToUpper(System.Globalization.CultureInfo.CurrentCulture))
                    {
                        case "HOSPSTAFFUSERNAME":
                            if (!reader.IsDBNull(i))
                            {
                                this.HospStaffUsername = Convert.ToString(reader.GetValue(i));
                            }
                            break;
                        case "HOSPSTAFFID":
                            if (!reader.IsDBNull(i))
                            {
                                this.HospStaffId = Convert.ToString(reader.GetValue(i));
                            }
                            break;
                        case "REQSERVICECODE":
                            if (!reader.IsDBNull(i))
                            {
                                this.ReqServiceCode = Convert.ToString(reader.GetValue(i));
                            }
                            break;
                        case "REQSERVICEDESCRIPTION":
                            if (!reader.IsDBNull(i))
                            {
                                this.ReqServiceDescription = Convert.ToString(reader.GetValue(i));
                            }
                            break;
                        case "SPECCODE":
                            if (!reader.IsDBNull(i))
                            {
                                this.SpecCode = Convert.ToString(reader.GetValue(i));
                            }
                            break;
                        case "SPECDESCRIPTION":
                            if (!reader.IsDBNull(i))
                            {
                                this.SpecDescription = Convert.ToString(reader.GetValue(i));
                            }
                            break;  
                    }
                }
            }
        }
		
        /// <summary>
        /// Initialize a new  HospitalStaff object with the given parameters.
        /// </summary>
        public  HospitalStaff(string hospStaffMechanNum, string hospStaffType) : base(hospStaffMechanNum, hospStaffType)
        {
        }


        public string ReqServiceCode { get; set; }

        public string ReqServiceDescription { get; set; }

        public string SpecCode { get; set; }

        public string SpecDescription { get; set; }
    }
}


